{"version":3,"sources":["components/Projects/Projects.module.css","pages/Chat/interface.module.css","pages/Introduction/App.module.css","assets/images/chatongptLogo.png","components/ChatInterface/interface.module.css","components/ChatBox/chatbox.module.css","logo.svg","components/SignUp/signUp.module.css","hooks/useScrollDirection.js","utils/isAuth.js","utils/tokens.js","api/interceptors.js","api/api.js","services/chat.service.js","modals/CreateRoomModal.js","redux/types.js","services/auth.service.js","redux/actions/authAction.js","modals/RoomSetting.js","services/user.service.js","utils/callAPI.js","utils/timeFormat.js","components/ChatInterface/index.js","components/Login/index.js","components/SignUp/index.js","redux/actions/chatAction.js","components/SideBar/index.js","components/Notification/index.js","components/ChatBox/index.js","pages/Chat/index.js","components/UserSetting/index.js","components/ListItems/index.js","components/MyProfile/FileUpload.js","components/MyProfile/index.js","pages/Profile/index.js","pages/Login/index.js","components/Contact/Contact.jsx","components/Hero/Hero.jsx","components/Navbar/Navbar.jsx","routes/routes.js","pages/Introduction/index.js","App.js","redux/reducers/authReducer.js","redux/reducers/chatReducer.js","redux/store/index.js","reportWebVitals.js","index.js","components/SideBar/list.module.css","components/About/About.module.css","components/Experience/Experience.module.css","components/Projects/ProjectCard.module.css","components/Hero/Hero.module.css","components/Contact/Contact.module.css","components/Navbar/Navbar.module.css"],"names":["module","exports","useScrollDirection","e","scrollDirection","setScrollDirection","useState","useEffect","offsetTop","current","lastScrollY","updateScrollDirection","offsetTopNew","scrollY","direction","window","addEventListener","removeEventListener","isAuth","GetRefreshToken","localStorage","getItem","SetRefreshToken","token","setItem","SetAccessToken","RemoveRefreshToken","removeItem","isRefreshing","failedRequestQueue","setAuthorizationHeader","params","request","headers","onRequest","config","onRequestError","error","Promise","reject","onResponse","response","onResponseError","_error$response","status","_error$response2","_error$response2$data","data","code","originalConfig","refreshToken","api","post","Authorization","then","defaults","forEach","onSuccess","catch","onFailure","finally","handleRefreshToken","resolve","push","axiosInstance","axios","create","baseURL","process","interceptors","use","GetRoomInfo","roomId","get","concat","res","err","GetRoomListOfUser","userId","GetMessageListInRoom","customStyles","content","top","left","right","bottom","marginRight","transform","background","color","border","overlay","CreateRoomModal","_ref","modalIsOpen","closeModal","useDispatch","userInfo","useSelector","state","auth","user","roomName","setRoomName","subtitle","React","createElement","Modal","className","styles","createConversationModal","isOpen","onAfterOpen","style","onRequestClose","contentLabel","animationDuration","ref","_subtitle","onSubmit","async","CreateNewRoom","creator","console","createNewRoomForm","type","placeholder","onChange","target","value","required","createConversationButton","LoginWithUsernameAndPassword","username","password","responseData","tokens","access","refresh","log","LoginSuccess","information","dispatch","payload","MembersList","onlineUsers","chat","participants","_state$chat$roomInfo","roomInfo","Box","sx","display","flexWrap","overflowY","maxHeight","justifyContent","gap","Typography","level","ml","List","variant","width","borderRadius","map","participant","index","key","ListItem","ListItemDecorator","Avatar","mr","size","src","profilePicture","alt","isOnline","alignItems","CircleIcon","fontSize","length","ListDivider","inset","InviteTab","socket","loginUser","_state$chat$roomInfo2","currentRoomId","usersFound","setUsersFound","searchName","setSearchName","isSearching","startSearching","enqueueSnackbar","closeSnackbar","useSnackbar","on","message","off","Input","backgroundColor","Button","onClick","result","filter","_id","SearchIcon","p","flexDirection","height","packet","from","to","emit","SendInvitation","AddIcon","SettingTab","navigate","useNavigate","RoomSettingModal","_ref2","open","setOpen","setValue","TuneIcon","aria-labelledby","aria-describedby","onClose","maxWidth","typography","TabContext","borderBottom","borderColor","TabList","handleChange","event","newValue","aria-label","textColor","indicatorColor","Tab","label","TabPanel","padding","API","createNewRoom","tokenId","getRoom","getMessages","getInvite","findUser","timeFormat","time","Date","toLocaleString","hour","minute","day","month","year","callAPI","ChatInterface","createTheme","palette","primary","main","secondary","Copyright","props","Object","assign","align","Link","href","getFullYear","defaultTheme","SignUpPage","isAuthenticated","ThemeProvider","theme","Container","component","CssBaseline","marginTop","m","bgcolor","LockOutlinedIcon","preventDefault","FormData","currentTarget","repeatPassword","SignUp","noValidate","mt","TextField","margin","fullWidth","id","name","autoComplete","autoFocus","mb","Grid","container","item","LoadChatRoomAction","LoadRoomListAction","SetCurrentRoomAction","SideBar","chatListOpen","toggleChatList","roomList","invitationList","setIsOpen","inviteList","setInviteList","inviteBoxIsOpen","setInviteBoxIsOpen","handleAcceptInvitation","inviteId","put","AcceptInvitation","messageList","handleRoomName","clsx","chat_list","menu_chat","chat_list_navigation","navigation_createNewChat","navigation_closeChat","chat_list_conversationList","room","opponent","split","splice","indexOf","conversationList_conversations","current_conversation","user_navigation","user_notification","hide","invite","marginBottom","user_invitations_tags","user_info","Notification","setState","vertical","horizontal","Snackbar","anchorOrigin","handleClose","autoHideDuration","textAlign","sender","styled","_templateObject","_taggedTemplateLiteral","ChatBox","onlineState","inputRef","useRef","currentRoomInfo","isTyping","setIsTyping","typingUser","setTypingUser","typingTimerRef","setRoomId","messagesEndRef","chatBoxRef","setMessage","imageDataURL","setImageDataURL","emojiPicker","setEmojiPicker","debouncedOnPaste","debounce","items","clipboardData","i","imageFile","getAsFile","processImage","reader","FileReader","onload","image","Image","canvas","document","getContext","drawImage","resizedImage","toDataURL","prev","newImage","includes","readAsDataURL","scrollTop","sendMessage","messagePacket","senderData","images","showNotification","setShowNotification","notification","setNotification","notificationTimer","setTimeout","clearTimeout","fileInputRef","chat_box","chat_box_bar","fly","bar_padding","navigation_openChatListButton","add_member","chat_content","expand","createRoomStatus","_message$senderData","chat_content_messages","messages_wrapper","chat_avatar","messages_content","message_time","timestamp","message_image_wrapper","url","imageIndex","message_image","isTypingStatus","chat_box_prompt","image_preview","position","delete_image","_","prompt_textArea","wrap","onKeyDown","keyCode","shiftKey","prompt_feature_area","prompt_emoji","EmojiPicker","onEmojiClick","emoji","prompt_image","handleClick","click","_e$target","files","prompt_sendButton","io","setChatListOpen","LoadInvitationList","GetInvitationList","LoadRoomList","action","snackbarId","Fragment","LoadChatRoom","ChatList","UserSetting","mainListItems","ListItemButton","ListItemIcon","AccountCircleIcon","ListItemText","secondaryListItems","ArrowBackIcon","clip","clipPath","overflow","whiteSpace","MyProfile","selectedImage","setSelectedImage","spacing","xs","md","URL","createObjectURL","UpdateUser","adminRoutes","path","AppBar","MuiAppBar","shouldForwardProp","prop","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","Drawer","MuiDrawer","boxSizing","overflowX","breakpoints","up","mode","default","Contact","text","links","link","getImageUrl","Hero","title","description","contactBtn","logo","heroImg","topBlur","bottomBlur","Navbar","menuOpen","setMenuOpen","navbar","menu","menuBtn","menuItems","privateRoutes","Chat","anchorEl","setAnchorEl","toggleDrawer","Boolean","Routes","Route","route","Title","element","Toolbar","pr","IconButton","edge","MenuIcon","noWrap","flexGrow","px","ChevronLeftIcon","Divider","my","grey","pt","publicRoutes","App","loginData","userData","FormControlLabel","control","Checkbox","isLoading","setIsLoading","location","useLocation","patch","pathname","Page","initialState","authReducer","arguments","undefined","role","profilePictureUrl","chatReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","GoogleOAuthProvider","clientId","BrowserRouter","Provider","SnackbarProvider"],"mappings":"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","file":"static/js/main.34bc6623.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Projects_container__aoA1y\",\"title\":\"Projects_title__184zF\",\"projects\":\"Projects_projects__YPmIv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"interface_container__2wmhA\",\"chat_list\":\"interface_chat_list__31P35\",\"chat_box\":\"interface_chat_box__kUA9c\",\"chat_box_bar\":\"interface_chat_box_bar__3X11t\",\"add_member\":\"interface_add_member__nA98h\",\"add_member_box\":\"interface_add_member_box__3KGWK\",\"user_adding_tags\":\"interface_user_adding_tags__2kIin\",\"fly\":\"interface_fly__2rR1q\",\"chat_content\":\"interface_chat_content__2KR4c\",\"expand\":\"interface_expand__2pIaJ\",\"chat_content_messages\":\"interface_chat_content_messages__2q0As\",\"border_message\":\"interface_border_message__1BZWM\",\"messages_wrapper\":\"interface_messages_wrapper__2o04x\",\"messages_content\":\"interface_messages_content__2olx9\",\"message_image_wrapper\":\"interface_message_image_wrapper__162no\",\"message_image\":\"interface_message_image__3yQ8j\",\"message_time\":\"interface_message_time__BN3YT\",\"chat_avatar\":\"interface_chat_avatar__jHayJ\",\"chat_box_prompt\":\"interface_chat_box_prompt__HlvgM\",\"image_preview\":\"interface_image_preview__lGgvr\",\"images\":\"interface_images__3w1ZD\",\"delete_image\":\"interface_delete_image__3ppVF\",\"prompt_textArea\":\"interface_prompt_textArea__3OJQm\",\"prompt_feature_area\":\"interface_prompt_feature_area__21VUQ\",\"prompt_emoji\":\"interface_prompt_emoji__3pI_t\",\"emojiPicker\":\"interface_emojiPicker__13WT4\",\"prompt_sendButton\":\"interface_prompt_sendButton__170Ax\",\"chat_list_navigation\":\"interface_chat_list_navigation__27K1Y\",\"navigation_createNewChat\":\"interface_navigation_createNewChat__2eVK6\",\"navigation_closeChat\":\"interface_navigation_closeChat__y2byq\",\"menu_chat\":\"interface_menu_chat__2NmYA\",\"chat_list_conversationList\":\"interface_chat_list_conversationList__2vuhW\",\"conversationList_conversations\":\"interface_conversationList_conversations__8MCU8\",\"current_conversation\":\"interface_current_conversation__3yqt4\",\"opponent\":\"interface_opponent__3Qbnk\",\"hide\":\"interface_hide__1vWul\",\"user_found\":\"interface_user_found__hZ_4f\",\"createConversationButton\":\"interface_createConversationButton__oszcq\",\"createNewRoomForm\":\"interface_createNewRoomForm__1Ikma\",\"user_navigation\":\"interface_user_navigation__3xHq_\",\"user_info\":\"interface_user_info__1Is7t\",\"user_notification\":\"interface_user_notification__2rG0L\",\"user_invitations_tags\":\"interface_user_invitations_tags__1k-QY\",\"navigation_openChatListButton\":\"interface_navigation_openChatListButton__2Vg2A\",\"open\":\"interface_open__33nqh\",\"isTypingStatus\":\"interface_isTypingStatus__2L2JU\",\"createRoomStatus\":\"interface_createRoomStatus__64YHD\",\"bar_padding\":\"interface_bar_padding__LJaVP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__LvhmO\"};","module.exports = __webpack_public_path__ + \"static/media/chatongptLogo.064ac3e9.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"interface_container__2fHvu\",\"chat_list\":\"interface_chat_list__3bp6w\",\"chat_box\":\"interface_chat_box__3Z_QX\",\"chat_box_bar\":\"interface_chat_box_bar__1YGrs\",\"add_member\":\"interface_add_member__1TX3j\",\"add_member_box\":\"interface_add_member_box__3nyqD\",\"user_adding_tags\":\"interface_user_adding_tags__1o-0G\",\"fly\":\"interface_fly__3jJsd\",\"chat_content\":\"interface_chat_content__1W7Cv\",\"expand\":\"interface_expand__3O6JD\",\"chat_content_messages\":\"interface_chat_content_messages__1UWLh\",\"border_message\":\"interface_border_message__3d8C8\",\"messages_wrapper\":\"interface_messages_wrapper__2Zqnf\",\"messages_content\":\"interface_messages_content__2-0CK\",\"message_image_wrapper\":\"interface_message_image_wrapper__vrbon\",\"message_image\":\"interface_message_image__1RQ-F\",\"message_time\":\"interface_message_time__9lS5t\",\"chat_avatar\":\"interface_chat_avatar__3wrKM\",\"chat_box_prompt\":\"interface_chat_box_prompt__1UWdF\",\"image_preview\":\"interface_image_preview__2Qg_9\",\"images\":\"interface_images__1VtPz\",\"delete_image\":\"interface_delete_image__2RPZR\",\"prompt_textArea\":\"interface_prompt_textArea__1dXUg\",\"prompt_feature_area\":\"interface_prompt_feature_area__2Kfzf\",\"prompt_emoji\":\"interface_prompt_emoji__-t53t\",\"emojiPicker\":\"interface_emojiPicker__2krg9\",\"prompt_sendButton\":\"interface_prompt_sendButton__2eWhj\",\"chat_list_navigation\":\"interface_chat_list_navigation__2Lj4I\",\"navigation_createNewChat\":\"interface_navigation_createNewChat__cJ8eV\",\"navigation_closeChat\":\"interface_navigation_closeChat__3WR88\",\"menu_chat\":\"interface_menu_chat__39sp0\",\"chat_list_conversationList\":\"interface_chat_list_conversationList__L-dyw\",\"conversationList_conversations\":\"interface_conversationList_conversations__2QrV6\",\"current_conversation\":\"interface_current_conversation__TRFyK\",\"opponent\":\"interface_opponent__1nGNu\",\"hide\":\"interface_hide__1Eap8\",\"user_found\":\"interface_user_found__r2Uvz\",\"createConversationButton\":\"interface_createConversationButton__1hUBp\",\"createNewRoomForm\":\"interface_createNewRoomForm__2LXgu\",\"user_navigation\":\"interface_user_navigation__3-i2G\",\"user_info\":\"interface_user_info__2GaV_\",\"user_notification\":\"interface_user_notification__1Ac1b\",\"user_invitations_tags\":\"interface_user_invitations_tags__2LrzS\",\"navigation_openChatListButton\":\"interface_navigation_openChatListButton__3hMOy\",\"open\":\"interface_open__3TWFa\",\"isTypingStatus\":\"interface_isTypingStatus__2ow4A\",\"createRoomStatus\":\"interface_createRoomStatus__1uG3a\",\"bar_padding\":\"interface_bar_padding__vV2Bw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chatbox_container__2PCO2\",\"chat_list\":\"chatbox_chat_list__37ZmR\",\"chat_box\":\"chatbox_chat_box__2RItp\",\"chat_box_bar\":\"chatbox_chat_box_bar__mJuJ-\",\"add_member\":\"chatbox_add_member__2olId\",\"add_member_box\":\"chatbox_add_member_box__1KKWc\",\"user_adding_tags\":\"chatbox_user_adding_tags__2dzzX\",\"fly\":\"chatbox_fly__UEE3o\",\"chat_content\":\"chatbox_chat_content__1-ytZ\",\"expand\":\"chatbox_expand__MWgrI\",\"chat_content_messages\":\"chatbox_chat_content_messages__3VXcY\",\"border_message\":\"chatbox_border_message__29V5h\",\"messages_wrapper\":\"chatbox_messages_wrapper__1b9zN\",\"messages_content\":\"chatbox_messages_content__wMvP3\",\"message_image_wrapper\":\"chatbox_message_image_wrapper__H2FH8\",\"message_image\":\"chatbox_message_image__vkg76\",\"message_time\":\"chatbox_message_time__28ZO0\",\"chat_avatar\":\"chatbox_chat_avatar__1s13d\",\"chat_box_prompt\":\"chatbox_chat_box_prompt__23Gqr\",\"image_preview\":\"chatbox_image_preview__Io9SU\",\"images\":\"chatbox_images__2ZwoC\",\"delete_image\":\"chatbox_delete_image__354jG\",\"prompt_textArea\":\"chatbox_prompt_textArea__2Ssjd\",\"prompt_feature_area\":\"chatbox_prompt_feature_area__1rVH0\",\"prompt_image\":\"chatbox_prompt_image__28de3\",\"prompt_emoji\":\"chatbox_prompt_emoji__3QZvd\",\"emojiPicker\":\"chatbox_emojiPicker__1u27T\",\"prompt_sendButton\":\"chatbox_prompt_sendButton__2HMmZ\",\"chat_list_navigation\":\"chatbox_chat_list_navigation__1RWjK\",\"navigation_createNewChat\":\"chatbox_navigation_createNewChat__12LPc\",\"navigation_closeChat\":\"chatbox_navigation_closeChat__3gsR4\",\"menu_chat\":\"chatbox_menu_chat__1ACKW\",\"chat_list_conversationList\":\"chatbox_chat_list_conversationList__1ltC6\",\"conversationList_conversations\":\"chatbox_conversationList_conversations__1kcVd\",\"current_conversation\":\"chatbox_current_conversation__ZDlHk\",\"opponent\":\"chatbox_opponent__2tJGF\",\"hide\":\"chatbox_hide__3rjgC\",\"user_found\":\"chatbox_user_found__1V8Ol\",\"createConversationButton\":\"chatbox_createConversationButton__NNKRD\",\"createNewRoomForm\":\"chatbox_createNewRoomForm__3mNo2\",\"user_navigation\":\"chatbox_user_navigation__1UdFH\",\"user_info\":\"chatbox_user_info__dwBnZ\",\"user_notification\":\"chatbox_user_notification__3Zdqu\",\"user_invitations_tags\":\"chatbox_user_invitations_tags__1WTH4\",\"navigation_openChatListButton\":\"chatbox_navigation_openChatListButton__3Sj-C\",\"open\":\"chatbox_open__25Nce\",\"isTypingStatus\":\"chatbox_isTypingStatus__2pWU6\",\"createRoomStatus\":\"chatbox_createRoomStatus__260EW\",\"bar_padding\":\"chatbox_bar_padding__2HxsC\"};","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_form\":\"signUp_login_form__3lpqG\"};","import { useState, useEffect } from 'react';\r\nfunction useScrollDirection(e) {\r\n    const [scrollDirection, setScrollDirection] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const { offsetTop } = e?.current\r\n        let lastScrollY = offsetTop;\r\n\r\n        const updateScrollDirection = () => {\r\n            const { offsetTopNew } = e?.current\r\n            const scrollY = offsetTopNew;\r\n            const direction = scrollY > lastScrollY ? \"down\" : \"up\";\r\n            if (direction !== scrollDirection && (scrollY - lastScrollY > 10 || scrollY - lastScrollY < -10)) {\r\n                setScrollDirection(direction);\r\n            }\r\n            lastScrollY = scrollY > 0 ? scrollY : 0;\r\n        };\r\n        window.addEventListener(\"scroll\", updateScrollDirection); // add event listener\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", updateScrollDirection); // clean up\r\n        }\r\n    }, [scrollDirection]);\r\n\r\n    return scrollDirection;\r\n};\r\n\r\nexport default useScrollDirection;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nasync function isAuth(tokenId){\r\n    const data = await axios.post(`${process.env.REACT_APP_PUBLIC_URL}/auth/checkToken`, {}, {\r\n        headers: {\r\n            'Authorization': tokenId,\r\n        }\r\n    }).then(function(response){\r\n       return response.data;\r\n    })\r\n    return data;\r\n}\r\n\r\nexport default isAuth;","\r\n\r\nexport function GetRefreshToken(){\r\n    return localStorage.getItem('REFRESH_TOKEN');\r\n}\r\n\r\nexport function GetAccessToken(){\r\n    return localStorage.getItem('ACCESS_TOKEN');\r\n}\r\n\r\nexport function SetRefreshToken(token){\r\n    return localStorage.setItem('REFRESH_TOKEN', token);\r\n}\r\n\r\nexport function SetAccessToken(token){\r\n    return localStorage.setItem('ACCESS_TOKEN', token);\r\n}\r\n\r\nexport function RemoveRefreshToken(token){\r\n    return localStorage.removeItem('REFRESH_TOKEN');\r\n}\r\n\r\nexport function RemoveAccessToken(token){\r\n    return localStorage.removeItem('ACCESS_TOKEN');\r\n}","import {\r\n    AxiosDefaults,\r\n    AxiosError,\r\n    AxiosInstance,\r\n    AxiosRequestConfig,\r\n    AxiosResponse,\r\n    InternalAxiosRequestConfig\r\n} from 'axios'\r\nimport {GetAccessToken, GetRefreshToken, RemoveRefreshToken, SetRefreshToken} from \"../utils/tokens\";\r\nimport {api} from \"./api\";\r\n\r\nlet isRefreshing = false;\r\nlet failedRequestQueue = [];\r\n\r\nfunction setAuthorizationHeader(params) {\r\n    const {request, token} = params;\r\n    request.headers['Authorization'] = token;\r\n}\r\n\r\nfunction handleRefreshToken(refreshToken) {\r\n    isRefreshing = true;\r\n\r\n    api.post(\r\n        '/auth/refresh',\r\n        {refreshToken},\r\n        {\r\n            headers: {\r\n                Authorization: GetRefreshToken(),\r\n            }\r\n        }\r\n    )\r\n        .then((response) => {\r\n            const { refreshToken } = response.data;\r\n            SetRefreshToken(refreshToken);\r\n            setAuthorizationHeader({request: api.defaults, refreshToken});\r\n\r\n            failedRequestQueue.forEach((request) => request.onSuccess(refreshToken));\r\n            failedRequestQueue = [];\r\n        })\r\n        .catch((error) => {\r\n            failedRequestQueue.forEach((request) => request.onFailure(error));\r\n            failedRequestQueue = [];\r\n            RemoveRefreshToken();\r\n        })\r\n        .finally(() => {\r\n            isRefreshing = false;\r\n        });\r\n}\r\n\r\nfunction onRequest(config) {\r\n    const token = GetAccessToken();\r\n    if (token) {\r\n        setAuthorizationHeader({request: config, token});\r\n    }\r\n    return config;\r\n}\r\n\r\nfunction onRequestError(error) {\r\n    return Promise.reject(error);\r\n}\r\n\r\nfunction onResponse(response) {\r\n    return response;\r\n}\r\n\r\nfunction onResponseError(error) {\r\n    if (error?.response?.status === 401) {\r\n        if (error.response?.data?.code === 'token.expired') {\r\n            const originalConfig = error.config;\r\n            const refreshToken = GetRefreshToken();\r\n\r\n            if (!isRefreshing) {\r\n                handleRefreshToken(refreshToken);\r\n            }\r\n\r\n            return new Promise((resolve, reject) => {\r\n                failedRequestQueue.push({\r\n                    onSuccess: (token) => {\r\n                        setAuthorizationHeader({request: originalConfig, token});\r\n                        resolve(api(originalConfig));\r\n                    },\r\n                    onFailure: (error) => {\r\n                        reject(error);\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            RemoveRefreshToken();\r\n            // window.location.href = '/login';\r\n        }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n}\r\n\r\nexport function setupInterceptors(axiosInstance) {\r\n    axiosInstance.interceptors.request.use(onRequest, onRequestError);\r\n    axiosInstance.interceptors.response.use(onResponse, onResponseError);\r\n    return axiosInstance;\r\n}","import axios from 'axios'\r\n\r\nimport { setupInterceptors } from './interceptors'\r\n\r\nexport const api = setupInterceptors(\r\n    axios.create({\r\n        baseURL: process.env.REACT_APP_API_URL\r\n    })\r\n)","import {api} from '../api/api';\r\n\r\nexport const CreateNewRoom = (data) => {\r\n    return api.post(`/messenger/rooms/create`, data)\r\n        .then((res) =>{\r\n            return res.data;\r\n        })\r\n        .catch((err) =>{\r\n\r\n        })\r\n}\r\n\r\nconst GetRoomInfo = (roomId) => {\r\n    return api.get(`/messenger/rooms/${roomId}`)\r\n        .then((res) =>{\r\n            return res.data;\r\n        })\r\n        .catch((err) =>{\r\n\r\n        })\r\n}\r\nconst GetRoomListOfUser = (userId) => {\r\n    return api.get(`/messenger/users/${userId}/rooms`)\r\n        .then((res) =>{\r\n            return res.data;\r\n        })\r\n        .catch((err) =>{\r\n\r\n        })\r\n}\r\n\r\nconst GetMessageListInRoom = (roomId) => {\r\n    return api.get(`/messenger/rooms/${roomId}/messages`)\r\n        .then((res) =>{\r\n            return res.data;\r\n        })\r\n        .catch((err) =>{\r\n\r\n        })\r\n}\r\nconst SendInvitation = (roomId, from, to) => {\r\n    return api.get(`/messenger/rooms/${roomId}/messages`)\r\n        .then((res) =>{\r\n            return res.data;\r\n        })\r\n        .catch((err) =>{\r\n\r\n        })\r\n}\r\nconst GetInvitationList = (userId) => {\r\n    return api.get(`/user/${userId}/invitation-list`)\r\n        .then((res) =>{\r\n            return res.data;\r\n        })\r\n        .catch((err) =>{\r\n\r\n        })\r\n}\r\nconst AcceptInvitation = (inviteId) => {\r\n    return api.put(`/messenger/invite/${inviteId}/accept`)\r\n        .then((res) =>{\r\n            return res.data;\r\n        })\r\n        .catch((err) =>{\r\n\r\n        })\r\n}\r\nconst GetInvitationById = (inviteId) => {\r\n    return api.get(`/messenger/invite/${inviteId}`)\r\n        .then((res) =>{\r\n            return res.data;\r\n        })\r\n        .catch((err) =>{\r\n\r\n        })\r\n}\r\nexport {\r\n    GetMessageListInRoom,\r\n    GetRoomInfo,\r\n    GetRoomListOfUser,\r\n    SendInvitation,\r\n    GetInvitationList,\r\n    AcceptInvitation,\r\n    GetInvitationById\r\n}","import React, {useEffect, useState} from 'react';\r\nimport Modal from 'react-modal';\r\nimport styles from '../components/ChatInterface/interface.module.css'; // Make sure to import your CSS styles if needed\r\nimport {CreateNewRoom} from '../services/chat.service';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: '30%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    background: '#444654',\r\n    color: '#FFFFFF',\r\n    border: 'none'\r\n  },\r\n  overlay: {\r\n    background: \"rgb(19, 19, 19, 0.8)\"\r\n  }\r\n};\r\n\r\nconst CreateRoomModal = ({ modalIsOpen, closeModal }) => {\r\n  const dispatch = useDispatch();\r\n  const userInfo = useSelector((state) => state.auth.user);\r\n  const [roomName, setRoomName] = useState('');\r\n  async function Create(e) {\r\n    try {\r\n        const data = await CreateNewRoom({roomName: roomName, creator: userInfo })\r\n    } catch (error) {\r\n      console.error(\"An error occurred:\", error);\r\n    }\r\n  }\r\n\r\n  let subtitle;\r\n\r\n  function afterOpenModal() {\r\n    // references are now sync'd and can be accessed.\r\n    subtitle.style.color = '#00A67E';\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      className={styles.createConversationModal}\r\n      isOpen={modalIsOpen}\r\n      onAfterOpen={afterOpenModal}\r\n      onRequestClose={closeModal}\r\n      style={customStyles}\r\n      contentLabel=\"Example Modal\"\r\n      animationDuration={1000}\r\n    >\r\n      <h2 ref={(_subtitle) => (subtitle = _subtitle)}>Create conversation</h2>\r\n      <form onSubmit={Create} className={styles.createNewRoomForm}>\r\n        <input type=\"text\" placeholder=\"Enter room name\" onChange={(e)=>setRoomName(e.target.value)} required />\r\n        <button className={styles.createConversationButton}>Creating confirm</button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateRoomModal;\r\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const LOGIN = \"LOGIN\";\r\nexport const REGISTER = \"REGISTER\";\r\n\r\n//CHAT ROOM\r\nexport const LOAD_CHAT_ROOM = \"LOAD_CHAT_ROOM\";\r\nexport const SET_CURRENT_ROOM = \"SET_CURRENT_ROOM\";\r\nexport const LOAD_ROOM_LIST = \"LOAD_ROOM_LIST\";\r\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\r\nexport const RECEIVE_MESSAGE = 'RECEIVE_MESSAGE';\r\nexport const SET_ONLINE_USERS = 'SET_ONLINE_USERS';\r\nexport const LOAD_INVITATION_LIST = 'LOAD_INVITATION_LIST';\r\nexport const RECEIVE_INVITATION = 'RECEIVE_INVITATION';","import {api} from '../api/api'\r\nimport {GetAccessToken, GetRefreshToken, SetRefreshToken, SetAccessToken} from \"../utils/tokens\";\r\n\r\nconst LoginWithUsernameAndPassword = async (username, password) => {\r\n    return api.post(\r\n        '/auth/login',\r\n        {username, password})\r\n        .then((res) => {\r\n            const responseData = res.data;\r\n            if (responseData) {\r\n                SetAccessToken(responseData.tokens.access.token);\r\n                SetRefreshToken(responseData.tokens.refresh.token);\r\n                return responseData;\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n}\r\nconst SignUp = async (username, password, repeatPassword) => {\r\n    return api.post(\r\n        '/auth/signup',\r\n        {username, password, repeatPassword})\r\n        .then((res) => {\r\n            const responseData = res.data;\r\n            if (responseData) {\r\n                SetAccessToken(responseData.tokens.access.token);\r\n                SetRefreshToken(responseData.tokens.refresh.token);\r\n                return responseData;\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            throw err.response.data\r\n        })\r\n}\r\n\r\nexport {\r\n    SignUp,\r\n    LoginWithUsernameAndPassword\r\n}","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    SET_MESSAGE,\r\n    LOGIN,\r\n    REGISTER\r\n} from \"../types\";\r\n\r\nimport {LoginWithUsernameAndPassword, SignUp} from '../../services/auth.service'\r\n\r\nconst LoginSuccess = (information) => (dispatch) => {\r\n    dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: {\r\n            ...information\r\n        },\r\n    });\r\n};\r\nconst LogoutAction = (information) => (dispatch) => {\r\n    dispatch({\r\n        type: LOGOUT,\r\n        payload: {\r\n            ...information\r\n        },\r\n    });\r\n};\r\nexport {LoginSuccess, LogoutAction};","import * as React from 'react';\r\nimport Button from '@mui/joy/Button';\r\nimport Input from '@mui/joy/Input';\r\nimport Modal from '@mui/joy/Modal';\r\nimport {ListDivider, ListItem, ListItemDecorator, ModalClose, Sheet} from \"@mui/joy\";\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/joy/Box';\r\nimport Typography from \"@mui/joy/Typography\";\r\nimport TuneIcon from '@mui/icons-material/Tune';\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport Avatar from \"@mui/joy/Avatar\";\r\nimport List from '@mui/joy/List';\r\nimport {useEffect, useState} from \"react\";\r\nimport CircleIcon from '@mui/icons-material/Circle';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport {GetUsersByUsername} from \"../services/user.service\";\r\nimport {SnackbarProvider, useSnackbar} from 'notistack';\r\nimport {\r\n    LogoutAction\r\n} from \"../redux/actions/authAction\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {RemoveAccessToken, RemoveRefreshToken} from \"../utils/tokens\";\r\n\r\nfunction MembersList() {\r\n    const onlineUsers = useSelector((state) => state.chat.onlineUsers.data);\r\n    const participants = useSelector((state) => state.chat.roomInfo?.participants);\r\n\r\n    useEffect(() => {\r\n        console.log(participants)\r\n        console.log(onlineUsers)\r\n    });\r\n\r\n    function isOnline(username) {\r\n        for (const user of onlineUsers) {\r\n            if (user.username === username) return true;\r\n        }\r\n        return false; // Username does not exist in onlineUsers\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                overflowY: 'scroll',\r\n                maxHeight: 1,\r\n                justifyContent: 'space-between',\r\n                gap: 1,\r\n            }}\r\n        >\r\n            <Typography level=\"body-xs\" sx={{\r\n                ml: 2\r\n            }}>\r\n                <p>All members</p>\r\n            </Typography>\r\n            <List\r\n                variant=\"plain\"\r\n                sx={{\r\n                    width: 1,\r\n                    borderRadius: 'sm',\r\n                }}\r\n            >\r\n                {participants && participants.map((participant, index) => (\r\n                    <React.Fragment key={index}>\r\n                        <ListItem sx={{display: 'flex', justifyContent: 'space-between'}}>\r\n\r\n                            <ListItemDecorator sx={{color: 'white'}}>\r\n                                <Avatar sx={{mr: 1}} size=\"sm\" src={participant?.profilePicture}\r\n                                        alt={participant?.username}/>\r\n                                {participant?.username}\r\n                            </ListItemDecorator>\r\n\r\n                            {/*online*/}\r\n                            {isOnline(participant?.username) ?\r\n                                <Typography sx={{display: 'inline-flex', alignItems: 'center'}}>\r\n                                    <CircleIcon sx={{color: '#00A67E', fontSize: 15}}/>Online\r\n                                </Typography>\r\n                                :\r\n                                <Typography sx={{display: 'inline-flex', alignItems: 'center'}}>\r\n                                    <CircleIcon sx={{color: '#932121', fontSize: 15}}/>Offline\r\n                                </Typography>}\r\n\r\n                            {/*offline*/}\r\n\r\n                        </ListItem>\r\n                        {index < participants.length - 1 && <ListDivider inset={'default'}/>}\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </List>\r\n        </Box>\r\n    );\r\n}\r\n\r\nfunction InviteTab({socket}) {\r\n    const loginUser = useSelector((state) => state.auth.user);\r\n    const onlineUsers = useSelector((state) => state.chat.onlineUsers.data);\r\n    const participants = useSelector((state) => state.chat.roomInfo?.participants);\r\n    const currentRoomId = useSelector((state) => state.chat.currentRoomId);\r\n    //search user\r\n    const [usersFound, setUsersFound] = React.useState(null);\r\n    const [searchName, setSearchName] = React.useState('');\r\n    const [isSearching, startSearching] = React.useTransition();\r\n    const {enqueueSnackbar, closeSnackbar} = useSnackbar();\r\n\r\n    async function SearchUser() {\r\n        try {\r\n            const result = await GetUsersByUsername(searchName);\r\n            if (result) {\r\n                startSearching(() => {\r\n                    setUsersFound(result.filter(user => user._id !== loginUser._id))\r\n                })\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    async function SendInvitation(target) {\r\n        const packet = {\r\n            from: loginUser._id,\r\n            to: target._id,\r\n            roomId: currentRoomId\r\n        }\r\n        socket.emit('send-invitation', packet)\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on('invitationSuccess', (data) => {\r\n            enqueueSnackbar(data.message, {variant: 'success'})\r\n        })\r\n        return () => {\r\n            socket.off('invitationSuccess')\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        socket.on('invitationFailed', (data) => {\r\n            enqueueSnackbar(data.message, {variant: 'error'})\r\n        })\r\n        return () => {\r\n            socket.off('invitationFailed')\r\n        }\r\n    }, [])\r\n\r\n    function isOnline(username) {\r\n        for (const user of onlineUsers) {\r\n            if (user.username === username) return true;\r\n        }\r\n        return false; // Username does not exist in onlineUsers\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !currentRoomId ? (<p>Create room first</p>) : (\r\n                    <Box\r\n                        sx={{\r\n                            display: 'flex',\r\n                            flexWrap: 'wrap',\r\n                            overflowY: 'scroll',\r\n                            maxHeight: 1,\r\n                            justifyContent: 'space-between',\r\n                            gap: 1,\r\n                        }}\r\n                    >\r\n\r\n                        <Typography level=\"body-xs\" sx={{\r\n                            ml: 1\r\n                        }}>\r\n                            <p>Invite users</p>\r\n                            <Box sx={{display: 'flex', gap: 1}}>\r\n                                <Input onChange={(e) => {\r\n                                    setSearchName(e.target.value)\r\n                                }} placeholder=\"Find user by name\" sx={{backgroundColor: 'black', color: 'white'}}/>\r\n                                <Button sx={{backgroundColor: '#00A67E'}} onClick={SearchUser}><SearchIcon/></Button>\r\n                            </Box>\r\n                        </Typography>\r\n                        <List\r\n                            variant=\"plain\"\r\n                            sx={{\r\n                                ml: 1\r\n                            }}\r\n                        >\r\n                            {usersFound && usersFound.map((participant, index) => (\r\n                                <React.Fragment key={index}>\r\n                                    <ListItem sx={{display: 'flex', justifyContent: 'space-between', p: 0}}>\r\n\r\n                                        <ListItemDecorator sx={{color: 'white'}}>\r\n                                            <Avatar sx={{mr: 1}} size=\"sm\" src={participant?.profilePicture}\r\n                                                    alt={participant?.username}/>\r\n                                            <Box sx={{display: 'flex', flexDirection: 'column'}}>\r\n                                                {participant?.username}\r\n                                                {isOnline(participant?.username) ?\r\n                                                    <Typography sx={{display: 'inline-flex', alignItems: 'center'}}>\r\n                                                        <CircleIcon sx={{color: '#00A67E', fontSize: 15}}/>Online\r\n                                                    </Typography>\r\n                                                    :\r\n                                                    <Typography sx={{display: 'inline-flex', alignItems: 'center'}}>\r\n                                                        <CircleIcon sx={{color: '#932121', fontSize: 15}}/>Offline\r\n                                                    </Typography>}\r\n                                            </Box>\r\n\r\n                                        </ListItemDecorator>\r\n                                        {/*online*/}\r\n\r\n                                        <Button\r\n                                            sx={{\r\n                                                width: '40px',\r\n                                                height: '40px',\r\n                                                borderRadius: '50%',\r\n                                                backgroundColor: 'black'\r\n                                            }}\r\n                                            onClick={() => SendInvitation(participant)}\r\n                                        ><AddIcon/></Button>\r\n                                        {/*offline*/}\r\n\r\n                                    </ListItem>\r\n\r\n                                    {index < participants.length - 1 && <ListDivider inset={'default'}/>}\r\n                                </React.Fragment>\r\n                            ))}\r\n\r\n                        </List>\r\n                    </Box>\r\n\r\n                )\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nfunction SettingTab() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    function HandleLogout() {\r\n        RemoveRefreshToken()\r\n        RemoveAccessToken()\r\n        dispatch(LogoutAction())\r\n        navigate('/introduction')\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                overflowY: 'scroll',\r\n                maxHeight: 1,\r\n                justifyContent: 'space-between',\r\n                gap: 1,\r\n            }}\r\n        >\r\n\r\n            <Typography level=\"body-xs\" sx={{\r\n                ml: 1\r\n            }}>\r\n                <p>Setting</p>\r\n\r\n            </Typography>\r\n            <Button onClick={HandleLogout}>\r\n                Logout\r\n            </Button>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default function RoomSettingModal({socket}) {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [value, setValue] = React.useState('1');\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TuneIcon color='white' onClick={() => setOpen(true)}/>\r\n            <Modal\r\n                aria-labelledby=\"modal-title\"\r\n                aria-describedby=\"modal-desc\"\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                sx={{\r\n                    display: 'flex', justifyContent: 'center', alignItems: 'center', color: '#fff',\r\n                }}\r\n            >\r\n                <Box sx={{\r\n                    width: 300, height: 400, maxWidth: 600,\r\n                    typography: 'body1', color: '#fff', backgroundColor: 'black', borderRadius: 2,\r\n                }}>\r\n                    <TabContext value={value} sx={{color: 'white', overflowY: 'scroll'}}>\r\n                        <Box sx={{borderBottom: 1, borderColor: 'divider', color: 'white'}}>\r\n                            <TabList\r\n                                onChange={handleChange}\r\n                                sx={{color: 'white', borderColor: 'white'}}\r\n                                aria-label=\"lab API tabs example\"\r\n                                textColor='inherit'\r\n                                indicatorColor=\"primary\"\r\n                            >\r\n                                <Tab sx={{color: 'white'}} label=\"Members\" value=\"1\"/>\r\n                                <Tab sx={{color: 'white'}} label=\"Invite\" value=\"2\"/>\r\n                                <Tab sx={{color: 'white'}} label=\"Setting\" value=\"3\"/>\r\n                            </TabList>\r\n                        </Box>\r\n                        <TabPanel value=\"1\" sx={{padding: '5px', height: 0.8}}>\r\n                            <MembersList/>\r\n                        </TabPanel>\r\n                        <TabPanel value=\"2\" sx={{padding: '5px', height: 0.8}}>\r\n                            <InviteTab socket={socket}/>\r\n                        </TabPanel>\r\n                        <TabPanel value=\"3\" sx={{padding: '5px', height: 0.8}}><SettingTab/></TabPanel>\r\n                    </TabContext>\r\n                </Box>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n        ;\r\n}","import { api } from '../api/api';\r\nconst UpdateUser = (id, data) => {\r\n    api.post(`/user/update/${id}`, data)\r\n        .then((res)=>{\r\n            return res.data;\r\n        })\r\n        .catch((err)=>{\r\n            return err\r\n        })\r\n}\r\nconst GetUserById = (id) => {\r\n    api.get(`/user/get/id/${id}`)\r\n        .then((res)=>{\r\n            return res.data.data;\r\n        })\r\n        .catch((err)=>{\r\n\r\n        })\r\n}\r\nconst GetUsersByUsername = (username) => {\r\n    return api.get(`/user?username=${username}`)\r\n        .then((res)=>{\r\n            return res.data;\r\n        })\r\n        .catch((err)=>{\r\n\r\n        })\r\n}\r\n\r\nexport {\r\n    GetUserById,\r\n    GetUsersByUsername,\r\n    UpdateUser\r\n}","//import\r\nimport axios from 'axios';\r\n\r\nconst API = process.env.REACT_APP_PUBLIC_URL;\r\n\r\n//send data (userid , participants ) to server\r\n//create new room.\r\nasync function createNewRoom(data, tokenId){\r\n    const result = await axios.post(`${API}/messenger/room/create`, data\r\n    ).then(function(response){\r\n        return response.data;\r\n    })\r\n    return result;\r\n}\r\n\r\nasync function getRoom(username) {\r\n    const result = await axios.get(`${API}/messenger/room/get/${username}`)\r\n        .then(function (response) {\r\n            return response.data;\r\n        })\r\n    return result;\r\n}\r\nasync function getMessages(roomId) {\r\n    const result = await axios.get(`${API}/messenger/get/${roomId}`)\r\n        .then(function (response) {\r\n            return response.data;\r\n        })\r\n        .catch(function (err) {\r\n            console.log(err.message);\r\n        })\r\n    return result;\r\n}\r\n\r\nasync function getInvite(username) {\r\n    const result = await axios.get(`${API}/messenger/room/invite/get/${username}`)\r\n        .then(function (response) {\r\n            return response.data;\r\n        })\r\n    return result;\r\n}\r\n\r\nasync function findUser(username) {\r\n    const result = await axios.get(`${API}/messenger/user/find/${username}`)\r\n        .then(function (response) {\r\n            return response.data;\r\n        })\r\n    return result;\r\n}\r\n\r\n\r\n\r\n\r\nexport default {\r\n    createNewRoom,\r\n    getRoom,\r\n    getMessages,\r\n    getInvite,\r\n    findUser,\r\n}","export default function timeFormat(time){\r\n    const timestamp = new Date(time);\r\n\r\n    const options = {\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n        day: \"2-digit\",\r\n        month: \"2-digit\",\r\n        year: \"numeric\"\r\n    };\r\n\r\n    const formattedTimestamp = timestamp.toLocaleString(\"en-GB\", options);\r\n    return formattedTimestamp;\r\n}","import {useRef, useState, useEffect} from 'react';\r\nimport clsx from \"clsx\";\r\nimport React from 'react';\r\nimport {Modal} from '@mui/material';\r\nimport styles from './interface.module.css';\r\nimport useScrollDirection from '../../hooks/useScrollDirection.js';\r\nimport isAuth from '../../utils/isAuth';\r\nimport CreateRoomModal from '../../modals/CreateRoomModal';\r\nimport RoomSettingModal from '../../modals/RoomSetting';\r\nimport callAPI from \"../../utils/callAPI\";\r\nimport timeFormat from \"../../utils/timeFormat\";\r\nimport EmojiPicker from 'emoji-picker-react';\r\nimport {Emoji, EmojiStyle} from 'emoji-picker-react';\r\n\r\nconst {createNewRoom, getRoom, getMessages, findUser, getInvite} = callAPI;\r\n\r\nconst ChatInterface = ({socket, onlineState}) => {\r\n    // console.log(\"this is chat component\")\r\n    // setIsLoading(pre => ({...pre, name:5765}))\r\n    //login states\r\n    const [isLoading, setIsLoading] = useState(true); // Add loading state\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [isTyping, setIsTyping] = useState(false);\r\n    const [typingUser, setTypingUser] = useState([]);\r\n    const typingTimerRef = useRef(null);\r\n    //users states\r\n    const [userInfo, setUserInfo] = useState({});\r\n    //find target user to create conversation states\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [roomName, setRoomName] = useState('');\r\n    const [userFoundName, setUserFoundName] = useState(\"\");\r\n    const [userFoundInfo, setUserFoundInfo] = useState({});\r\n    const [userFound, setUserFound] = useState(\"\");\r\n    const [inviteStatus, setInviteStatus] = useState(\"\");\r\n    const [chatListOpen, setChatListOpen] = useState(false);\r\n    //user notification box (invitations, ...)\r\n    const [inviteBoxIsOpen, setInviteBoxIsOpen] = useState(false);\r\n    const [userBoxIsOpen, setUserBoxIsOpen] = useState(false);\r\n    const [inviteList, setInviteList] = useState([]);\r\n    //message and conversation states\r\n    const [addMemberBox, setAddMemberBox] = useState(false);\r\n    const [messageList, setMessageList] = useState([]);\r\n    const [roomId, setRoomId] = useState(\"\");\r\n    const [currentRoomInfo, setCurrentRoomInfo] = useState({});\r\n    const [roomList, setRoomList] = useState([]);\r\n    //scroll ref\r\n    const messagesEndRef = useRef(null)\r\n    const chatBoxRef = useRef(null);\r\n    const chatBoxScroll = useScrollDirection(chatBoxRef);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [imageDataURL, setImageDataURL] = useState([]);\r\n    const [emojiPicker, setEmojiPicker] = useState(false);\r\n    const onPaste = (event) => {\r\n        // event.preventDefault();\r\n        let imageAdded = false; // Flag to track if an image has been added\r\n\r\n        const clipboardData = event.clipboardData || window.clipboardData;\r\n        const items = clipboardData.items;\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (items[i].type.indexOf('image') !== -1) {\r\n                const imageFile = items[i].getAsFile();\r\n                processImage(imageFile);\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    const processImage = (imageFile) => {\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            const image = new Image();\r\n            image.onload = () => {\r\n                const canvas = document.createElement('canvas');\r\n                const maxWidth = 800; // Set the maximum width for the resized image\r\n                const maxHeight = 800; // Set the maximum height for the resized image\r\n                let width = image.width;\r\n                let height = image.height;\r\n\r\n                // Calculate the new width and height while maintaining the aspect ratio\r\n                if (width > maxWidth) {\r\n                    height *= maxWidth / width;\r\n                    width = maxWidth;\r\n                }\r\n                if (height > maxHeight) {\r\n                    width *= maxHeight / height;\r\n                    height = maxHeight;\r\n                }\r\n\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(image, 0, 0, width, height);\r\n\r\n                const resizedImage = canvas.toDataURL('image/jpeg', 0.3); // Convert the resized image to base64 string\r\n\r\n                setImageDataURL((prev) => {\r\n                    const newImage = resizedImage;\r\n\r\n                    // Check if the newImage is not already in the array\r\n                    if (!prev.includes(newImage)) {\r\n                        return [...prev, newImage];\r\n                    } else {\r\n                        return prev; // Return the current array without changes\r\n                    }\r\n                });\r\n            };\r\n            image.src = event.target.result;\r\n        };\r\n        reader.readAsDataURL(imageFile);\r\n    };\r\n    let subtitle;\r\n\r\n    const [scrollDirection, setScrollDirection] = useState(null);\r\n\r\n    useEffect(() => {\r\n        let lastScrollY = chatBoxRef.current.scrollTop;\r\n        const updateScrollDirection = () => {\r\n            const scrollY = chatBoxRef.current.scrollTop;\r\n            const direction = scrollY > lastScrollY ? \"down\" : \"up\";\r\n            if (direction !== scrollDirection && (scrollY - lastScrollY > 10 || scrollY - lastScrollY < -10)) {\r\n                setScrollDirection(direction);\r\n            }\r\n            lastScrollY = scrollY > 0 ? scrollY : 0;\r\n        };\r\n        chatBoxRef.current.addEventListener(\"scroll\", updateScrollDirection); // add event listener\r\n        return () => {\r\n            chatBoxRef.current.removeEventListener(\"scroll\", updateScrollDirection); // clean up\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(onlineState)\r\n    }, onlineState)\r\n\r\n\r\n    function openModal() {\r\n        setIsOpen(true);\r\n        setChatListOpen(false)\r\n    }\r\n\r\n    function afterOpenModal() {\r\n        // references are now sync'd and can be accessed.\r\n        subtitle.style.color = '#00A67E';\r\n    }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n        setUserFoundInfo({});\r\n    }\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current.scrollIntoView({behavior: \"smooth\"})\r\n    }\r\n\r\n    useEffect(() => {\r\n        scrollToBottom()\r\n    });\r\n\r\n    const tokenId = localStorage.getItem('tokenId');\r\n    // Run the effect only once on component mount\r\n    // isAuth(tokenId)\r\n    useEffect(() => {\r\n        socket.on('pingMessage', (data) => {\r\n            setMessageList((prev) => [...prev, data])\r\n        })\r\n        return () => {\r\n            socket.off('pingMessage')\r\n        }\r\n    }, [])\r\n\r\n    async function getUserInfo(username) {\r\n        const userInfo = await findUser(username);\r\n        if (userInfo.data) {\r\n            setUserInfo(userInfo.data);\r\n        }\r\n    }\r\n\r\n    async function getRoomList(username) {\r\n        const rooms = await getRoom(username);\r\n        if (rooms) {\r\n            setRoomList(rooms.data.roomList);\r\n            if (rooms.data.roomList[0]) {\r\n                setRoomId(rooms.data.roomList[0]._id);\r\n                setCurrentRoomInfo(rooms.data.roomList[0])\r\n            }\r\n        }\r\n        socket.emit('join', roomId);\r\n    }\r\n\r\n    async function getInviteList(username) {\r\n        const invitations = await getInvite(username);\r\n        if (invitations) {\r\n            setInviteList([...invitations.data]);\r\n        }\r\n    }\r\n\r\n    useEffect(async () => {\r\n        async function checkAuth() {\r\n            const userInfo = await isAuth(tokenId);\r\n            if (!userInfo.data) {\r\n                setIsLoggedIn(false)\r\n            } else {\r\n                setIsLoggedIn(true);\r\n                await getUserInfo(userInfo.data);\r\n                await getRoomList(userInfo.data);\r\n                await getInviteList(userInfo.data);\r\n            }\r\n        }\r\n\r\n        if (tokenId) {\r\n            await checkAuth();\r\n        }\r\n    }, [])\r\n    //update dom when join room\r\n    // useEffect(async () => {\r\n    //     async function update() {\r\n    //         await getRoomList(userInfo.username);\r\n    //         await getInviteList(userInfo.username);\r\n    //     }\r\n    //     await update();\r\n    //\r\n    // }, [roomId])\r\n    useEffect(() => {\r\n        socket.emit(\"setUsername\", userInfo.username);\r\n        return () => {\r\n            socket.on('disconnect');\r\n        };\r\n    }, [userInfo])\r\n\r\n    useEffect(() => {\r\n        socket.emit('join', roomId);\r\n\r\n        async function getAllMessages() {\r\n            const messages = await getMessages(roomId);\r\n            if (messages) {\r\n                setMessageList(messages.data);\r\n            }\r\n        }\r\n\r\n        getAllMessages();\r\n        return () => {\r\n            socket.emit('un-join', roomId);\r\n        };\r\n    }, [roomId])\r\n\r\n    function handleSendMessage(e) {\r\n        setMessage(e.target.value)\r\n        if (typingTimerRef.current) {\r\n            clearTimeout(typingTimerRef.current);\r\n        }\r\n\r\n        // Set isTyping to true and start a timer to emit \"isTyping\" after a delay\r\n        setIsTyping(true);\r\n\r\n        // Emit \"isTyping\" after a delay (e.g., 1000ms or 1 second)\r\n        typingTimerRef.current = setTimeout(() => {\r\n            if (e.target.value.length > 0) {\r\n                let data = {\r\n                    username: userInfo.username, roomId: roomId,\r\n                };\r\n                socket.emit(\"isTyping\", data);\r\n            }\r\n            if (e.target.value.length === 0) {\r\n                let data = {\r\n                    username: userInfo.username, roomId: roomId,\r\n                };\r\n                socket.emit(\"isNotTyping\", data);\r\n            }\r\n            setIsTyping(false); // User is no longer typing\r\n        }, 200); // Adjust the delay as needed (e.g., 1000ms = 1 second)\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on('pingIsTyping', (data) => {\r\n            // console.log(data)\r\n            setTypingUser(data);\r\n        })\r\n        return () => {\r\n            socket.off('pingIsTyping')\r\n        }\r\n    }, [])\r\n\r\n    async function handleFindUser() {\r\n        const userInfo = await findUser(userFoundName);\r\n        if (userInfo.data) {\r\n            setUserFoundInfo(userInfo.data);\r\n        }\r\n    }\r\n\r\n\r\n    function sendMessage() {\r\n        if (message || imageDataURL) {\r\n            const messagePacket = {\r\n                sender: userInfo.username,\r\n                senderData: userInfo._id,\r\n                roomId: roomId,\r\n                content: message,\r\n                images: imageDataURL\r\n            }\r\n            let data = {\r\n                username: userInfo.username, roomId: roomId,\r\n            };\r\n            socket.emit(\"isNotTyping\", data);\r\n            socket.emit(\"message\", {messagePacket});\r\n        }\r\n        setMessage(\"\");\r\n        setImageDataURL([]);\r\n    }\r\n\r\n    function handleConversation(e) {\r\n        setScrollDirection(null)\r\n        setRoomId(e._id);\r\n        setCurrentRoomInfo(e)\r\n    }\r\n\r\n    async function handleSendInvite(target) {\r\n        const data = {\r\n            roomId: roomId, from: userInfo.username, target: target\r\n        }\r\n        socket.emit(\"invite\", data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on(\"pingInvite\", async (data) => {\r\n            async function update() {\r\n                await getInviteList(data.target);\r\n            }\r\n\r\n            await update();\r\n        })\r\n        return () => {\r\n            socket.off(\"pingInvite\");\r\n        };\r\n    }, []);\r\n\r\n    function handleRoomName(e) {\r\n        setRoomName(e.target.value);\r\n    }\r\n\r\n    async function handleCreateNewRoom(data) {\r\n        try {\r\n            // Assuming 'username' is defined somewhere\r\n            const participants = [userInfo.username];\r\n            const messages = await createNewRoom({roomName, participants});\r\n        } catch (error) {\r\n            console.error(\"An error occurred:\", error);\r\n        }\r\n    }\r\n\r\n    async function handleAcceptInvitation(data) {\r\n        const {roomId, target, from} = data;\r\n        try {\r\n            socket.emit(\"joinRoom\", {roomId, target, from})\r\n        } catch (error) {\r\n            console.error(\"An error occurred:\", error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on(\"pingJoinRoom\", async (data) => {\r\n            // console.log(data)\r\n            const {roomId} = data;\r\n\r\n            async function update() {\r\n                await getRoomList(userInfo.username);\r\n                await getInviteList(userInfo.username);\r\n            }\r\n\r\n            await update();\r\n        })\r\n        return () => {\r\n            socket.off(\"pingJoinRoom\");\r\n        };\r\n    }, []);\r\n    return (<div>\r\n        <CreateRoomModal\r\n            modalIsOpen={modalIsOpen}\r\n            closeModal={closeModal}\r\n            handleRoomName={handleRoomName}\r\n            createNewRoom={handleCreateNewRoom}\r\n        />\r\n        <div className={styles.container}>\r\n            <div className={styles.chat_box}>\r\n                <div className={clsx(styles.chat_box_bar, {[styles.fly]: scrollDirection === \"up\"})}>\r\n                    <div className={styles.bar_padding}></div>\r\n                    <button className={styles.navigation_openChatListButton}\r\n                            onClick={() => {\r\n                                setChatListOpen(true);\r\n                            }}\r\n                    >\r\n                        <ion-icon name=\"log-out-outline\"></ion-icon>\r\n                    </button>\r\n                    <p>{currentRoomInfo.name}</p>\r\n\r\n                    <div className={styles.add_member}>\r\n                        <RoomSettingModal/>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={clsx(styles.chat_content, {[styles.expand]: imageDataURL.length !== 0})}\r\n                     ref={chatBoxRef}\r\n                >\r\n                    <ul>\r\n                        <p className={styles.createRoomStatus}>{currentRoomInfo.name} was created</p>\r\n                        {messageList.map(function (message, index) {\r\n                            return (\r\n                                <li className={clsx(styles.chat_content_messages, {[styles.opponent]: message.sender === userInfo.username})}>\r\n                                    <div className={styles.messages_wrapper}>\r\n                                        <img src={message.senderData.profilePicture}\r\n                                             className={clsx(styles.chat_avatar, {[styles.hide]: index >= 1 && message.sender == messageList[index - 1].sender})}/>\r\n                                        {/* <p>{message.username}</p> */}\r\n                                        <div style={{\r\n                                            display: \"flex\", justifyContent: \"flex-start\", flexDirection: \"column\"\r\n                                        }}>\r\n                                            <p className={styles.messages_content}> {message.content}\r\n                                                {/*<Emoji unified=\"1f423\" size=\"25\" />*/}\r\n                                                <span\r\n                                                    className={styles.message_time}>  {timeFormat(message.timestamp)} by {message.sender}</span>\r\n                                            </p>\r\n                                            {message.images.length !== 0 && (\r\n                                                <div className={styles.message_image_wrapper}>\r\n                                                    {(message.images).map(function (url, imageIndex) {\r\n                                                        return (// <LazyLoadImage src={Image}\r\n                                                            //                width={600} height={400}\r\n                                                            //                alt=\"Image Alt\"\r\n                                                            // />\r\n                                                            <img\r\n                                                                src={url}\r\n                                                                className={styles.message_image}\r\n                                                            />)\r\n                                                    })}\r\n                                                </div>)}\r\n\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n                                </li>)\r\n                        })}\r\n                        {typingUser.map(function (data, index) {\r\n                            if (data.roomId === roomId && data.username !== userInfo.username) {\r\n                                return (<h4 className={styles.isTypingStatus}>{data.username} is typing...</h4>)\r\n                            }\r\n                        })}\r\n                        <div ref={messagesEndRef}/>\r\n                    </ul>\r\n\r\n                </div>\r\n\r\n                <form className={styles.chat_box_prompt} draggable onDrag={onPaste}>\r\n                    {imageDataURL.length !== 0 && (<div className={styles.image_preview}>\r\n                        {imageDataURL.map(function (url, imageIndex) {\r\n                            return (<div style={{position: \"relative\"}}>\r\n                                    <img src={url} alt=\"Pasted Image\" className={styles.images}/>\r\n                                    <button className={styles.delete_image}\r\n                                            onClick={(e) => {\r\n                                                e.preventDefault()\r\n                                                setImageDataURL((prev) => prev.filter((_, index) => index !== imageIndex));\r\n                                            }}\r\n                                    >\r\n                                        <ion-icon name=\"close-circle-outline\"></ion-icon>\r\n                                    </button>\r\n                                </div>\r\n\r\n                            )\r\n                        })}\r\n                    </div>)}\r\n                    <textarea className={styles.prompt_textArea} wrap=\"soft\"\r\n                              onKeyDown={function (e) {\r\n                                  // Enter was pressed without shift key\r\n                                  if (e.keyCode == 13 && !e.shiftKey) {\r\n                                      // prevent default behavior\r\n                                      e.preventDefault();\r\n                                      sendMessage();\r\n                                  }\r\n                              }}\r\n                              onChange={handleSendMessage}\r\n                              ref={(ref) => {\r\n                                  if (ref) {\r\n                                      ref.addEventListener('paste', onPaste);\r\n                                  }\r\n                              }}\r\n\r\n                              placeholder=\"Send a message\"\r\n                              value={message}>\r\n                        </textarea>\r\n                    <div className={styles.prompt_feature_area}>\r\n                        <div className={styles.prompt_emoji}>\r\n                            {emojiPicker && <EmojiPicker\r\n                                className={styles.emojiPicker}\r\n                                onEmojiClick={(emoji, event) => {\r\n                                    console.log(emoji)\r\n                                }}\r\n                            />}\r\n                            <ion-icon name=\"happy-outline\"\r\n                                      onClick={() => {\r\n                                          setEmojiPicker(!emojiPicker);\r\n                                      }}\r\n                            ></ion-icon>\r\n                        </div>\r\n                        <div className={styles.prompt_sendButton} onClick={sendMessage}>\r\n                            <ion-icon name=\"send-outline\"></ion-icon>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default ChatInterface;\r\n","//new login form\r\nimport * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\r\nimport {useState, useEffect, useCallback} from 'react';\r\nimport {Navigate, useNavigate} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport {LoginSuccess} from '../../redux/actions/authAction'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {LoginWithUsernameAndPassword} from '../../services/auth.service';\r\nimport {enqueueSnackbar} from \"notistack\";\r\n\r\nfunction Copyright(props) {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://mui.com/\">\r\n                Chat On Gpt\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\n// TODO remove, this demo shouldn't need to reset the theme.\r\n\r\nconst defaultTheme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#00A67E',\r\n        },\r\n        secondary: {\r\n            main: '#00A67E',\r\n        },\r\n    },\r\n});\r\n\r\nexport default function Login(props) {\r\n    const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const data = new FormData(event.currentTarget);\r\n\r\n        const information = {\r\n            username: data.get('email'),\r\n            password: data.get('password'),\r\n        }\r\n\r\n        try {\r\n            const loginData = await LoginWithUsernameAndPassword(information?.username, information?.password);\r\n            dispatch(LoginSuccess(loginData.userData));\r\n            // navigate('/')\r\n        } catch (error) {\r\n            // Handle error if needed\r\n            enqueueSnackbar('Wrong username or password', {variant: 'error'})\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated === true) {\r\n            navigate('/')\r\n        }\r\n    });\r\n\r\n    return (\r\n        <ThemeProvider theme={defaultTheme}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline/>\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 7,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{m: 1, bgcolor: 'secondary.main'}}>\r\n                        <LockOutlinedIcon/>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n                    </Typography>\r\n                    <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{mt: 1}}>\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                        />\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Checkbox value=\"remember\" color=\"primary\"/>}\r\n                            label=\"Remember me\"\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{mt: 3, mb: 2}}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item xs>\r\n                                <Link href=\"#\" variant=\"body2\">\r\n                                    Forgot password?\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Link href=\"/SignUp\" variant=\"body2\">\r\n                                    {\"Don't have an account? Sign Up\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Box>\r\n                <Copyright sx={{mt: 8, mb: 4}}/>\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Navigate, useNavigate} from \"react-router-dom\";\r\nimport { useState } from 'react';\r\nimport styles from './signUp.module.css';\r\nimport {createTheme, ThemeProvider} from \"@mui/material/styles\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Link from \"@mui/material/Link\";\r\nimport {LoginWithUsernameAndPassword, SignUp} from \"../../services/auth.service\";\r\nimport {LoginSuccess,} from \"../../redux/actions/authAction\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useSnackbar} from \"notistack\";\r\nfunction Copyright(props) {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://mui.com/\">\r\n                Chat On Gpt\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\n// TODO remove, this demo shouldn't need to reset the theme.\r\n\r\nconst defaultTheme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#00A67E',\r\n        },\r\n        secondary: {\r\n            main: '#00A67E',\r\n        },\r\n    },\r\n});\r\nconst SignUpPage = () => {\r\n    const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const data = new FormData(event.currentTarget);\r\n\r\n        const information = {\r\n            username: data.get('email'),\r\n            password: data.get('password'),\r\n            repeatPassword: data.get('repeatPassword'),\r\n        }\r\n\r\n        try {\r\n            const loginData = await SignUp(information?.username, information?.password, information?.repeatPassword);\r\n            if(loginData){\r\n                enqueueSnackbar('Register success, go to login', {variant: 'success'});\r\n            }\r\n        } catch (error) {\r\n            enqueueSnackbar(error.message, {variant: 'error'})\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     if (isAuthenticated === true) {\r\n    //         navigate('/')\r\n    //     }\r\n    // });\r\n\r\n    function handleSignUp(e) {\r\n        e.preventDefault();\r\n    }\r\n    return (\r\n        <ThemeProvider theme={defaultTheme}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline/>\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 7,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{m: 1, bgcolor: 'secondary.main'}}>\r\n                        <LockOutlinedIcon/>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign Up\r\n                    </Typography>\r\n                    <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{mt: 1}}>\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Username\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                        />\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                        />\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"repeatPassword\"\r\n                            label=\"Repeat Password\"\r\n                            type=\"password\"\r\n                            id=\"repeatPassword\"\r\n                            autoComplete=\"current-password\"\r\n                        />\r\n                        {/*<FormControlLabel*/}\r\n                        {/*    control={<Checkbox value=\"remember\" color=\"primary\"/>}*/}\r\n                        {/*    label=\"Remember me\"*/}\r\n                        {/*/>*/}\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{mt: 3, mb: 2}}\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                        <Grid container>\r\n                            {/*<Grid item xs>*/}\r\n                            {/*    <Link href=\"#\" variant=\"body2\">*/}\r\n                            {/*        Forgot password?*/}\r\n                            {/*    </Link>*/}\r\n                            {/*</Grid>*/}\r\n                            <Grid item>\r\n                                <Link href=\"/login\" variant=\"body2\">\r\n                                    {\"Already have an account, login now\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Box>\r\n                <Copyright sx={{mt: 8, mb: 4}}/>\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n\r\n}\r\n\r\nexport default SignUpPage;\r\n","import {\r\n    LOAD_CHAT_ROOM,\r\n    LOAD_ROOM_LIST,\r\n    SET_CURRENT_ROOM,\r\n    RECEIVE_MESSAGE,\r\n    SEND_MESSAGE,\r\n    SET_ONLINE_USERS,\r\n    LOAD_INVITATION_LIST,\r\n    RECEIVE_INVITATION\r\n} from \"../types\";\r\n\r\nimport {LoginWithUsernameAndPassword, SignUp} from '../../services/auth.service'\r\n\r\nconst LoadChatRoomAction = (information) => (dispatch) => {\r\n    dispatch({\r\n        type: LOAD_CHAT_ROOM,\r\n        payload: {\r\n            ...information\r\n        },\r\n    });\r\n};\r\nconst LoadRoomListAction = (information) => (dispatch) => {\r\n    dispatch({\r\n        type: LOAD_ROOM_LIST,\r\n        payload: {\r\n            ...information\r\n        },\r\n    });\r\n};\r\nconst SetCurrentRoomAction = (information) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_CURRENT_ROOM,\r\n        payload: {\r\n            ...information\r\n        },\r\n    });\r\n};\r\nconst ReceiveMessageAction = (information) => (dispatch) => {\r\n    dispatch({\r\n        type: RECEIVE_MESSAGE,\r\n        payload: {\r\n            ...information\r\n        },\r\n    });\r\n};\r\nconst SetOnlineUsers = (information) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_ONLINE_USERS,\r\n        payload: {\r\n            ...information\r\n        },\r\n    });\r\n};\r\n\r\nconst LoadInvitationListAction = (information) => (dispatch) => {\r\n    dispatch({\r\n        type: LOAD_INVITATION_LIST,\r\n        payload: {\r\n            ...information\r\n        },\r\n    });\r\n};\r\nconst ReceiveInvitationAction = (information) => (dispatch) => {\r\n    dispatch({\r\n        type: RECEIVE_INVITATION,\r\n        payload: {\r\n            ...information\r\n        },\r\n    });\r\n};\r\nexport {\r\n    LoadChatRoomAction,\r\n    LoadRoomListAction,\r\n    SetCurrentRoomAction,\r\n    ReceiveMessageAction,\r\n    SetOnlineUsers,\r\n    LoadInvitationListAction,\r\n    ReceiveInvitationAction\r\n};","import React, {useEffect, useState} from 'react';\r\nimport clsx from \"clsx\";\r\nimport styles from './list.module.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport CreateRoomModal from \"../../modals/CreateRoomModal\";\r\nimport {SetCurrentRoomAction, LoadRoomListAction, LoadChatRoomAction} from \"../../redux/actions/chatAction\";\r\nimport {\r\n    AcceptInvitation,\r\n    GetRoomListOfUser,\r\n    GetInvitationById,\r\n    GetRoomInfo,\r\n    GetMessageListInRoom\r\n} from \"../../services/chat.service\";\r\n\r\nconst SideBar = ({socket, chatListOpen, toggleChatList}) => {\r\n    const dispatch = useDispatch();\r\n    const userInfo = useSelector((state) => state.auth.user);\r\n    const roomList = useSelector((state) => state.chat.roomList);\r\n    const currentRoomId = useSelector((state) => state.chat.currentRoomId);\r\n    const invitationList = useSelector((state) => state.chat.invitationList);\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [inviteList, setInviteList] = useState([]);\r\n    const [inviteBoxIsOpen, setInviteBoxIsOpen] = useState(false);\r\n    let subtitle;\r\n\r\n    function openModal() {\r\n        setIsOpen(true);\r\n\r\n    }\r\n\r\n    function afterOpenModal() {\r\n        subtitle.style.color = '#00A67E';\r\n    }\r\n\r\n    function handleConversation(room) {\r\n\r\n    }\r\n\r\n    async function handleAcceptInvitation(inviteId) {\r\n        try{\r\n            const response = await AcceptInvitation(inviteId);\r\n            if(response){\r\n                const roomInfo = await GetRoomInfo(response.roomId._id)\r\n                const messageList = await GetMessageListInRoom(response.roomId._id);\r\n                const roomList = await GetRoomListOfUser(userInfo._id);\r\n                dispatch(LoadRoomListAction({roomList}));\r\n                dispatch(SetCurrentRoomAction({roomId: response.roomId._id}));\r\n                dispatch(LoadChatRoomAction({roomInfo, messageList}));\r\n            }\r\n        }catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    async function handleCreateNewRoom(data) {\r\n        try {\r\n\r\n        } catch (error) {\r\n            console.error(\"An error occurred:\", error);\r\n        }\r\n    }\r\n\r\n    function handleRoomName(e) {\r\n        // setRoomName(e.target.value);\r\n    }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false);\r\n        // setUserFoundInfo({});\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on('receive-invitation', (data) => {\r\n            // console.log(data)\r\n            // setTypingUser(data);\r\n        })\r\n        return () => {\r\n            socket.off('receive-invitation')\r\n        }\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <CreateRoomModal\r\n                modalIsOpen={modalIsOpen}\r\n                closeModal={closeModal}\r\n                handleRoomName={handleRoomName}\r\n                createNewRoom={handleCreateNewRoom}\r\n            />\r\n            <div className={clsx(styles.chat_list, {[styles.open]: chatListOpen === true})}>\r\n                <div className={styles.menu_chat}>\r\n                    <div className={styles.chat_list_navigation}>\r\n                        <button className={styles.navigation_createNewChat} onClick={openModal}>Create new chat\r\n                        </button>\r\n                        <button className={styles.navigation_closeChat}\r\n                                onClick={() => {\r\n                                    toggleChatList();\r\n                                }}\r\n                        >\r\n                            <ion-icon name=\"log-out-outline\"></ion-icon>\r\n                        </button>\r\n                    </div>\r\n                    <div className={styles.chat_list_conversationList}>\r\n                        <ul>\r\n                            {roomList.map(function (room) {\r\n                                const opponent = room?.name.split(',');\r\n                                const slice = opponent.splice(opponent.indexOf(userInfo?.username), 1)\r\n                                return (<li onClick={() => {\r\n                                    dispatch(SetCurrentRoomAction({roomId: room._id}))\r\n                                }}\r\n                                            className={clsx(styles.conversationList_conversations, {[styles.current_conversation]: room._id === currentRoomId})}>\r\n                                    <ion-icon name=\"chatbox-outline\"></ion-icon>\r\n                                    {room.name}</li>)\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.user_navigation}\r\n                     onClick={() => {\r\n                         setInviteBoxIsOpen(!inviteBoxIsOpen);\r\n                     }}\r\n                >\r\n                    <div className={clsx(styles.user_notification, {[styles.hide]: inviteBoxIsOpen === false})}>\r\n                        Invitations\r\n                        <ul style={{padding: '1px'}}>\r\n                            {invitationList.length > 0 && invitationList.map(function (invite) {\r\n                                return (\r\n                                    <li style={{backgroundColor: '#3b3b3b', padding: '10px 4px', marginBottom: '5px'}}>\r\n                                        <form className={styles.user_invitations_tags}\r\n                                              onSubmit={async (e) => {\r\n                                                  e.preventDefault()\r\n                                                  await handleAcceptInvitation(invite._id)\r\n                                              }}>\r\n                                             <span>\r\n                                                 <b>From: </b>\r\n                                                 {/*<img src={invite.from.profilePicture}/>*/}\r\n                                                 <p>{invite.from.username}</p>\r\n                                             </span>\r\n                                            <button type={\"submit\"}>\r\n                                                <ion-icon name=\"person-add-outline\"></ion-icon>\r\n                                            </button>\r\n\r\n                                        </form>\r\n                                        <p style={{margin: 0}}><b>Room: </b> {invite.roomId.name}</p>\r\n                                    </li>)\r\n\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                    <div className={styles.user_info}>\r\n                        <img src={userInfo?.profilePicture}/>\r\n                        <p>{userInfo?.username}</p>\r\n                    </div>\r\n\r\n                    <a href={'/profile/user-info'}>\r\n                        <ion-icon name=\"settings-outline\"></ion-icon>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SideBar;\r\n","import {Snackbar} from \"@mui/joy\";\r\nimport React from \"react\";\r\n\r\nconst Notification = ({socket, data}) => {\r\n    console.log(data)\r\n    const [state, setState] = React.useState({\r\n        open: true,\r\n        vertical: 'bottom',\r\n        horizontal: 'right',\r\n    });\r\n    const {vertical, horizontal, open} = state;\r\n\r\n    const handleClick = (newState) => () => {\r\n        setState({...newState, open: true});\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setState({...state, open: false});\r\n    };\r\n    return (\r\n        <Snackbar\r\n            anchorOrigin={{vertical, horizontal}}\r\n            open={open}\r\n            onClose={handleClose}\r\n            autoHideDuration={4000}\r\n            key={vertical + horizontal}\r\n            sx={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'flex-start',\r\n                textAlign: 'left',\r\n                alignItems: 'start'\r\n            }}\r\n        >\r\n            <b>{data.roomName}</b>\r\n            <div style={{textAlign: 'left'}}>\r\n                <b>{data.sender}: </b>{data.content}\r\n            </div>\r\n        </Snackbar>\r\n    )\r\n\r\n}\r\n\r\nexport default Notification","import styles from './chatbox.module.css';\r\nimport React, {useEffect, useRef, useState} from 'react';\r\nimport RoomSettingModal from \"../../modals/RoomSetting\";\r\nimport timeFormat from \"../../utils/timeFormat\";\r\nimport EmojiPicker from \"emoji-picker-react\";\r\nimport useScrollDirection from \"../../hooks/useScrollDirection\";\r\nimport clsx from \"clsx\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ReceiveMessageAction} from \"../../redux/actions/chatAction\";\r\nimport {debounce} from \"lodash\";\r\nimport Notification from \"../Notification\";\r\nimport IconButton from \"@mui/joy/IconButton\";\r\nimport { styled } from \"@mui/joy\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Skeleton from \"./skeleton\";\r\nconst VisuallyHiddenInput = styled('input')`\r\n  clip: rect(0 0 0 0);\r\n  clip-path: inset(50%);\r\n  height: 1px;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  white-space: nowrap;\r\n  width: 1px;\r\n`;\r\nconst ChatBox = ({socket, onlineState, toggleChatList, chatListOpen}) => {\r\n    const inputRef = useRef();\r\n    const userInfo = useSelector((state) => state.auth.user);\r\n    const currentRoomInfo = useSelector((state) => state.chat.roomInfo);\r\n    const messageList = useSelector((state) => state.chat.messageList);\r\n    const dispatch = useDispatch();\r\n    //login states\r\n    const [isTyping, setIsTyping] = useState(false);\r\n    const [typingUser, setTypingUser] = useState([]);\r\n    const typingTimerRef = useRef(null);\r\n    const [roomId, setRoomId] = useState(\"\");\r\n    //scroll ref\r\n    const messagesEndRef = useRef(null);\r\n    const chatBoxRef = useRef(null);\r\n    const chatBoxScroll = useScrollDirection(chatBoxRef);\r\n    const [message, setMessage] = useState('');\r\n    const [imageDataURL, setImageDataURL] = useState([]);\r\n    const [emojiPicker, setEmojiPicker] = useState(false);\r\n\r\n    const debouncedOnPaste = debounce((event) => {\r\n        let imageAdded = false; // Flag to track if an image has been added\r\n        const clipboardData = event.clipboardData || window.clipboardData;\r\n        const items = clipboardData.items;\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (items[i].type.indexOf('image') !== -1) {\r\n                const imageFile = items[i].getAsFile();\r\n                processImage(imageFile);\r\n            }\r\n        }\r\n    }, 500, {\r\n        'leading': true,\r\n        'trailing': false\r\n    }); // Adjust the debounce time as needed (e.g., 500 milliseconds)\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            setImageDataURL([])\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        if (inputRef.current) {\r\n            inputRef.current.addEventListener('paste', debouncedOnPaste);\r\n        }\r\n        // Cleanup: remove event listener when the component unmounts\r\n        // return () => {\r\n        //     if (inputRef.current) {\r\n        //         inputRef.current.removeEventListener('paste', debouncedOnPaste);\r\n        //     }\r\n        // };\r\n    }, [debouncedOnPaste]); // Ensure the effect runs when debouncedOnPaste changes\r\n\r\n    const processImage = (imageFile) => {\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            const image = new Image();\r\n            image.onload = () => {\r\n                const canvas = document.createElement('canvas');\r\n                const maxWidth = 720; // Set the maximum width for the resized image\r\n                const maxHeight = 900; // Set the maximum height for the resized image\r\n                let width = image.width;\r\n                let height = image.height;\r\n\r\n                // Calculate the new width and height while maintaining the aspect ratio\r\n                if (width > maxWidth) {\r\n                    height *= maxWidth / width;\r\n                    width = maxWidth;\r\n                }\r\n                if (height > maxHeight) {\r\n                    width *= maxHeight / height;\r\n                    height = maxHeight;\r\n                }\r\n\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(image, 0, 0, width, height);\r\n\r\n                const resizedImage = canvas.toDataURL('image/jpeg', 0.6); // Convert the resized image to base64 string\r\n\r\n                setImageDataURL((prev) => {\r\n                    const newImage = resizedImage;\r\n\r\n                    // Check if the newImage is not already in the array\r\n                    if (!prev.includes(newImage)) {\r\n                        return [...prev, newImage];\r\n                    } else {\r\n                        return prev; // Return the current array without changes\r\n                    }\r\n                });\r\n            };\r\n            image.src = event.target.result;\r\n        };\r\n        reader.readAsDataURL(imageFile);\r\n    };\r\n\r\n    let subtitle;\r\n\r\n    const [scrollDirection, setScrollDirection] = useState(null);\r\n\r\n    useEffect(() => {\r\n        let lastScrollY = chatBoxRef.current.scrollTop;\r\n        const updateScrollDirection = () => {\r\n            const scrollY = chatBoxRef?.current.scrollTop;\r\n            const direction = scrollY > lastScrollY ? \"down\" : \"up\";\r\n            if (direction !== scrollDirection && (scrollY - lastScrollY > 10 || scrollY - lastScrollY < -10)) {\r\n                setScrollDirection(direction);\r\n            }\r\n            lastScrollY = scrollY > 0 ? scrollY : 0;\r\n        };\r\n        chatBoxRef.current.addEventListener(\"scroll\", updateScrollDirection); // add event listener\r\n        // return () => {\r\n        //     chatBoxRef.current.removeEventListener(\"scroll\", updateScrollDirection); // clean up\r\n        // }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(onlineState)\r\n    }, onlineState)\r\n\r\n\r\n    const scrollToBottom = () => {\r\n        chatBoxRef.current.scrollTop = (messagesEndRef?.current.offsetTop);\r\n    }\r\n\r\n    useEffect(() => {\r\n        scrollToBottom()\r\n    }, [currentRoomInfo._id, messageList.length]);\r\n\r\n    // Run the effect only once on component mount\r\n    // isAuth(tokenId)\r\n    useEffect(() => {\r\n        socket.on('pingMessage', (data) => {\r\n            // setMessageList((prev) => [...prev, data])\r\n        })\r\n        return () => {\r\n            socket.off('pingMessage')\r\n        }\r\n    }, [])\r\n\r\n\r\n    function HandleTypingMessage(e) {\r\n        setMessage(e.target.value)\r\n        if (typingTimerRef.current) {\r\n            clearTimeout(typingTimerRef.current);\r\n        }\r\n        // Set isTyping to true and start a timer to emit \"isTyping\" after a delay\r\n        setIsTyping(true);\r\n\r\n        // Emit \"isTyping\" after a delay (e.g., 1000ms or 1 second)\r\n        typingTimerRef.current = setTimeout(() => {\r\n            if (e.target.value.length > 0) {\r\n                let data = {\r\n                    username: userInfo.username, roomId: roomId,\r\n                };\r\n                socket.emit(\"isTyping\", data);\r\n            }\r\n            if (e.target.value.length === 0) {\r\n                let data = {\r\n                    username: userInfo.username, roomId: roomId,\r\n                };\r\n                socket.emit(\"isNotTyping\", data);\r\n            }\r\n            setIsTyping(false); // User is no longer typing\r\n        }, 200); // Adjust the delay as needed (e.g., 1000ms = 1 second)\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on('pingIsTyping', (data) => {\r\n            // console.log(data)\r\n            setTypingUser(data);\r\n        })\r\n        return () => {\r\n            socket.off('pingIsTyping')\r\n        }\r\n    }, [])\r\n\r\n\r\n    function sendMessage() {\r\n        if (message.length > 0 || imageDataURL.length > 0) {\r\n            const messagePacket = {\r\n                sender: userInfo.username,\r\n                senderData: userInfo._id,\r\n                roomId: currentRoomInfo._id,\r\n                content: message,\r\n                images: imageDataURL\r\n            }\r\n            let data = {\r\n                username: userInfo.username, roomId: roomId,\r\n            };\r\n            socket.emit(\"isNotTyping\", data);\r\n            socket.emit(\"message\", messagePacket);\r\n            socket.emit(\"notification\", messagePacket)\r\n        }\r\n        setMessage('');\r\n        setImageDataURL([]);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on('pingMessage', (data) => {\r\n            dispatch(ReceiveMessageAction(data));\r\n        })\r\n        return () => {\r\n            socket.off('pingMessage')\r\n        }\r\n    }, [])\r\n\r\n    function handleTypingMessage(e) {\r\n        setMessage(e.target.value)\r\n        if (typingTimerRef.current) {\r\n            clearTimeout(typingTimerRef.current);\r\n        }\r\n        // Set isTyping to true and start a timer to emit \"isTyping\" after a delay\r\n        setIsTyping(true);\r\n        // Emit \"isTyping\" after a delay (e.g., 1000ms or 1 second)\r\n        typingTimerRef.current = setTimeout(() => {\r\n            if (e.target.value.length > 0) {\r\n                let data = {\r\n                    username: userInfo.username, roomId: roomId,\r\n                };\r\n                socket.emit(\"isTyping\", data);\r\n            }\r\n            if (e.target.value.length === 0) {\r\n                let data = {\r\n                    username: userInfo.username, roomId: roomId,\r\n                };\r\n                socket.emit(\"isNotTyping\", data);\r\n            }\r\n            setIsTyping(false); // User is no longer typing\r\n        }, 200); // Adjust the delay as needed (e.g., 1000ms = 1 second)\r\n    }\r\n\r\n    function srcset(image, size, rows = 1, cols = 1) {\r\n        return {\r\n            src: `${image}?w=${size * cols}&h=${size * rows}&fit=crop&auto=format`,\r\n            srcSet: `${image}?w=${size * cols}&h=${\r\n                size * rows\r\n            }&fit=crop&auto=format&dpr=2 2x`,\r\n        };\r\n    }\r\n    const [showNotification, setShowNotification] = useState(false);\r\n    const [notification, setNotification] = useState(null);\r\n    useEffect(() => {\r\n        socket.on('ping-notification', (data) => {\r\n            setShowNotification(true);\r\n            setNotification(data);\r\n        })\r\n        return () => {\r\n            socket.off('ping-notification')\r\n        }\r\n    }, [])\r\n\r\n\r\n    // Close notification after a delay\r\n    useEffect(() => {\r\n        const notificationTimer = setTimeout(() => {\r\n            setShowNotification(false);\r\n        }, 4000); // Adjust the delay as needed\r\n        return () => clearTimeout(notificationTimer);\r\n    }, [showNotification]);\r\n    const fileInputRef = useRef(null);\r\n\r\n    const handleClick = () => {\r\n        fileInputRef.current.click();\r\n    };\r\n\r\n    const handleFileChange = (event) => {\r\n        const selectedFile = event.target.files[0];\r\n        if (selectedFile) {\r\n            processImage(selectedFile); // Process the selected image file\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.chat_box}>\r\n            {showNotification && <Notification data={ notification } />}\r\n            <div className={clsx(styles.chat_box_bar, {[styles.fly]: scrollDirection === \"up\"})}>\r\n                {chatListOpen && (<div className={styles.bar_padding}></div>)}\r\n                {!chatListOpen && (\r\n                    <button className={styles.navigation_openChatListButton}\r\n                            onClick={() => {\r\n                                toggleChatList();\r\n                            }}\r\n                    >\r\n                        <ion-icon name=\"log-out-outline\"></ion-icon>\r\n                    </button>\r\n                )}\r\n\r\n                <p>{currentRoomInfo?.name}</p>\r\n                <div className={styles.add_member}>\r\n                    <RoomSettingModal socket={socket}/>\r\n                </div>\r\n            </div>\r\n            <div className={clsx(styles.chat_content, {[styles.expand]: imageDataURL.length !== 0})}\r\n                 ref={chatBoxRef}\r\n            >\r\n                <ul>\r\n                    <p className={styles.createRoomStatus}>{currentRoomInfo?.name} was created</p>\r\n                    {messageList?.map(function (message, index) {\r\n                        return (\r\n                            <li className={clsx(styles.chat_content_messages, {[styles.opponent]: message.sender === userInfo.username})}>\r\n                                <div className={styles.messages_wrapper}>\r\n                                    <img src={message?.senderData?.profilePicture} alt={message.senderData.username}\r\n                                         className={clsx(styles.chat_avatar, {[styles.hide]: index >= 1 && message.sender == messageList[index - 1].sender})}/>\r\n                                    <div style={{\r\n                                        display: \"flex\", justifyContent: \"flex-start\", flexDirection: \"column\"\r\n                                    }}>\r\n                                        <p className={styles.messages_content}> {message.content}\r\n                                            <span\r\n                                                className={styles.message_time}>  {timeFormat(message.timestamp)} by {message.sender}</span>\r\n                                        </p>\r\n                                        {message.images.length !== 0 && (\r\n                                            <div className={styles.message_image_wrapper}>\r\n                                                {(message.images).map(function (url, imageIndex) {\r\n                                                    return (\r\n                                                        <img\r\n                                                            src={url}\r\n                                                            className={styles.message_image}\r\n                                                        />)\r\n                                                })}\r\n                                            </div>)}\r\n                                    </div>\r\n                                </div>\r\n                            </li>)\r\n                    })}\r\n                    {typingUser.map(function (data, index) {\r\n                        if (data.roomId === roomId && data.username !== userInfo.username) {\r\n                            return (<h4 className={styles.isTypingStatus}>{data.username} is typing...</h4>)\r\n                        }\r\n                    })}\r\n                    <div/>\r\n                </ul>\r\n                <div ref={messagesEndRef}></div>\r\n            </div>\r\n\r\n            <form className={styles.chat_box_prompt}>\r\n                {imageDataURL?.length !== 0 && (<div className={styles.image_preview}>\r\n                    {imageDataURL.map(function (url, imageIndex) {\r\n                        return (<div style={{position: \"relative\"}}>\r\n                                <img src={url} alt=\"Pasted Image\" className={styles.images}/>\r\n                                <button className={styles.delete_image}\r\n                                        onClick={(e) => {\r\n                                            e.preventDefault()\r\n                                            setImageDataURL((prev) => prev.filter((_, index) => index !== imageIndex));\r\n                                        }}\r\n                                >\r\n                                    <ion-icon name=\"close-circle-outline\"></ion-icon>\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>)}\r\n                <textarea className={styles.prompt_textArea} wrap=\"soft\"\r\n                          onKeyDown={function (e) {\r\n                              // Enter was pressed without shift key\r\n                              if (e?.keyCode === 13 && !e.shiftKey) {\r\n                                  // prevent default behavior\r\n                                  e.preventDefault();\r\n                                  sendMessage();\r\n                              }\r\n                          }}\r\n                          onChange={handleTypingMessage}\r\n                          ref={inputRef}\r\n                          placeholder=\"Send a message\"\r\n                          value={message}>\r\n                        </textarea>\r\n                <div className={styles.prompt_feature_area}>\r\n\r\n                    <div className={styles.prompt_emoji}>\r\n                        {emojiPicker && <EmojiPicker\r\n                            className={styles.emojiPicker}\r\n                            onEmojiClick={(emoji, event) => {\r\n                                setMessage((prev) => prev + emoji.emoji);\r\n                            }}\r\n                        />}\r\n                        <ion-icon name=\"happy-outline\"\r\n                                  onClick={() => {\r\n                                      setEmojiPicker(!emojiPicker);\r\n                                  }}\r\n                        ></ion-icon>\r\n                    </div>\r\n                    <div className={styles.prompt_image} onClick={handleClick}>\r\n                        <ion-icon name=\"image-outline\"> </ion-icon>\r\n                        <input\r\n                            type=\"file\"\r\n                            style={{ display: 'none' }}\r\n                            ref={fileInputRef}\r\n                            onChange={(e) => {\r\n                                // Handle file selection logic here\r\n                                if (e?.target?.files) {\r\n                                processImage(e.target.files[0]);}\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className={styles.prompt_sendButton}>\r\n                        <ion-icon name=\"send-outline\" onClick={sendMessage}></ion-icon>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatBox;","import {useRef, useState, useEffect} from 'react';\r\nimport React from 'react';\r\nimport styles from './interface.module.css';\r\n\r\nimport {\r\n    GetRoomListOfUser,\r\n    GetRoomInfo,\r\n    GetMessageListInRoom,\r\n    GetInvitationList\r\n} from '../../services/chat.service';\r\n\r\nimport {\r\n    LoadChatRoomAction,\r\n    LoadRoomListAction,\r\n    SetCurrentRoomAction,\r\n    SetOnlineUsers,\r\n    LoadInvitationListAction,\r\n    ReceiveInvitationAction\r\n} from \"../../redux/actions/chatAction\";\r\n\r\nimport ChatList from '../../components/SideBar';\r\nimport ChatBox from '../../components/ChatBox';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport io from \"socket.io-client\";\r\nimport {useSnackbar} from \"notistack\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst socket = io('http://localhost:8080/');\r\nconst ChatInterface = () => {\r\n    const dispatch = useDispatch();\r\n    const userInfo = useSelector((state) => state.auth.user);\r\n    const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n    const currentRoomId = useSelector((state) => state.chat.currentRoomId);\r\n    const [chatListOpen, setChatListOpen] = useState(true);\r\n    const navigate = useNavigate();\r\n    // if(isAuthenticated === false){\r\n    //     navigate('/login')\r\n    // }\r\n    socket.emit('user-connected', userInfo?.username);\r\n\r\n    async function LoadRoomList(userId) {\r\n        const roomList = await GetRoomListOfUser(userId);\r\n        if(roomList && roomList.length > 0){\r\n            dispatch(LoadRoomListAction({roomList}));\r\n            dispatch(SetCurrentRoomAction({roomId: roomList[0]._id}))\r\n        }\r\n    }\r\n\r\n    const toggleChatList = () => {\r\n        setChatListOpen(!chatListOpen);\r\n        console.log(chatListOpen)\r\n    };\r\n\r\n    async function LoadChatRoom(roomId) {\r\n        if (roomId != null) {\r\n            const roomInfo = await GetRoomInfo(roomId);\r\n            const messageList = await GetMessageListInRoom(roomId);\r\n            dispatch(LoadChatRoomAction({roomInfo, messageList}));\r\n        }\r\n    }\r\n\r\n    async function LoadInvitationList(userId) {\r\n        if (userId != null) {\r\n            const invitationList = await GetInvitationList(userId);\r\n\r\n            dispatch(LoadInvitationListAction({invitationList}));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        LoadRoomList(userInfo?._id);\r\n        LoadInvitationList(userInfo?._id)\r\n    }, [userInfo]);\r\n\r\n    useEffect(() => {\r\n        socket.on('pingOnlineState', (data) => {\r\n            dispatch(SetOnlineUsers({data}));\r\n        });\r\n        return () => {\r\n            socket.off('pingOnlineState', currentRoomId);\r\n        };\r\n    });\r\n\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    const action = snackbarId => (\r\n        <>\r\n            <button onClick={() => { closeSnackbar(snackbarId) }}>\r\n                x\r\n            </button>\r\n        </>\r\n    );\r\n    useEffect(() => {\r\n        socket.on('receive-invitation', (data) => {\r\n            console.log(data)\r\n            enqueueSnackbar('New Invitation from' + data.from.username, {action})\r\n            dispatch(ReceiveInvitationAction(data))\r\n        })\r\n        return () => {\r\n            socket.off('receive-invitation')\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        LoadChatRoom(currentRoomId);\r\n        socket.emit('join', currentRoomId);\r\n        return () => {\r\n            socket.emit('un-join', currentRoomId);\r\n        };\r\n    }, [currentRoomId]);\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.container}>\r\n                {chatListOpen && (\r\n                    <ChatList socket={socket} chatListOpen={chatListOpen} toggleChatList={toggleChatList}/>\r\n                )}\r\n                <ChatBox socket={socket} chatListOpen={chatListOpen} toggleChatList={toggleChatList}/>\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nexport default ChatInterface;\r\n","import React from 'react';\r\nconst UserSetting = () =>{\r\n    console.log('day la user setting')\r\n\r\n    return (\r\n        <div>\r\n            <h1>this is user setting</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserSetting;","import * as React from 'react';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport LayersIcon from '@mui/icons-material/Layers';\r\nimport AssignmentIcon from '@mui/icons-material/Assignment';\r\nimport UserSetting from '../UserSetting';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst adminRoutes = [\r\n    {\r\n        path: '/user-info',\r\n        placeholder: 'User setting',\r\n        component: UserSetting\r\n    },\r\n]\r\nexport const mainListItems = (\r\n    <React.Fragment>\r\n        <ListItemButton component={Link} to=\"/profile/user-info\">\r\n            <ListItemIcon>\r\n                <AccountCircleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"User setting\" />\r\n        </ListItemButton>\r\n        {/* ... other list items ... */}\r\n    </React.Fragment>\r\n);\r\n\r\nexport const secondaryListItems = (\r\n    <React.Fragment>\r\n        {/* ... existing code ... */}\r\n        <ListItemButton component={Link} to=\"/\">\r\n            <ListItemIcon>\r\n                <ArrowBackIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Back to chat\" />\r\n        </ListItemButton>\r\n    </React.Fragment>\r\n);","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Button from '@mui/material/Button';\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\n\r\nconst VisuallyHiddenInput = styled('input')({\r\n    clip: 'rect(0 0 0 0)',\r\n    clipPath: 'inset(50%)',\r\n    height: 1,\r\n    overflow: 'hidden',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    whiteSpace: 'nowrap',\r\n    width: 1,\r\n});\r\n\r\nexport default function FileUpload() {\r\n    return (\r\n        <Button component=\"label\" variant=\"contained\" startIcon={<CloudUploadIcon />}>\r\n            Upload avartar\r\n            <VisuallyHiddenInput type=\"file\" />\r\n        </Button>\r\n    );\r\n}","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FileUpload from \"./FileUpload\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {UpdateUser, GetUserById} from '../../services/user.service'\r\nimport {useSelector} from \"react-redux\";\r\nimport {styled} from \"@mui/joy\";\r\nimport Card from \"@mui/joy/Card\";\r\nimport Typography from \"@mui/joy/Typography\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Stack from \"@mui/joy/Stack\";\r\nimport AspectRatio from \"@mui/joy/AspectRatio\";\r\nimport IconButton from \"@mui/joy/IconButton\";\r\nimport FormControl from \"@mui/joy/FormControl\";\r\nimport FormLabel from \"@mui/joy/FormLabel\";\r\nimport Input from \"@mui/joy/Input\";\r\nimport {useSnackbar} from \"notistack\";\r\nconst VisuallyHiddenInput = styled('input')`\r\n  clip: rect(0 0 0 0);\r\n  clip-path: inset(50%);\r\n  height: 1px;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  white-space: nowrap;\r\n  width: 1px;\r\n`;\r\nexport default function MyProfile() {\r\n    const userInfo = useSelector((state) => state.auth.user);\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n    useEffect(() => {\r\n        console.log()\r\n        setSelectedImage(userInfo?.profilePicture)\r\n    }, []);\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const updateData = {\r\n            profilePicture: data.get('profilePicture'),\r\n        }\r\n        try {\r\n            await UpdateUser(userInfo._id, data);\r\n            // console.log(userUpdated)\r\n\r\n        } catch (error) {\r\n            // Handle error if needed\r\n        }\r\n    };\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12} md={4}>\r\n                    {selectedImage && (\r\n                        <Avatar\r\n                            alt=\"Remy Sharp\"\r\n                            src={typeof selectedImage === 'string' ? selectedImage : URL.createObjectURL(selectedImage)}\r\n                            sx={{ width: 240, height: 240 }}\r\n                        />\r\n                    )}\r\n\r\n                    {!selectedImage && (<Avatar\r\n                        alt=\"Remy Sharp\"\r\n                        src=\"\"\r\n                        sx={{width: 240, height: 240}}\r\n                    />)}\r\n                </Grid>\r\n                <Grid item xs={12} md={8}>\r\n                    <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{mt: 1}}>\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                        />\r\n                        <input\r\n                            type=\"file\"\r\n                            id=\"profilePicture\"\r\n                            name=\"profilePicture\"\r\n                            onChange={(event) => {\r\n                                console.log(event.target.files[0]);\r\n                                setSelectedImage(event.target.files[0]);\r\n                            }}\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{mt: 3, mb: 2, backgroundColor: '#00A67E'}}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n\r\n    );\r\n}","import * as React from 'react';\r\nimport {styled, createTheme, ThemeProvider} from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport Box from '@mui/material/Box';\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Badge from '@mui/material/Badge';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Link from '@mui/material/Link';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Menu from '@mui/material/Menu';\r\nimport UserSetting from '../../components/UserSetting'\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport {mainListItems, secondaryListItems} from '../../components/ListItems';\r\nimport {BrowserRouter, Routes, Route, Navigate, useNavigate} from \"react-router-dom\";\r\nimport MyProfile from \"../../components/MyProfile\";\r\nconst adminRoutes = [\r\n    {\r\n        path: '/user-info',\r\n        placeholder: 'User setting',\r\n        component: UserSetting\r\n    }\r\n]\r\n\r\nfunction Copyright(props) {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://mui.com/\">\r\n               ChatOnGPT platform\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n    shouldForwardProp: (prop) => prop !== 'open',\r\n})(({theme, open}) => ({\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    ...(open && {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    }),\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, {shouldForwardProp: (prop) => prop !== 'open'})(\r\n    ({theme, open}) => ({\r\n        '& .MuiDrawer-paper': {\r\n            position: 'relative',\r\n            whiteSpace: 'nowrap',\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            boxSizing: 'border-box',\r\n            ...(!open && {\r\n                overflowX: 'hidden',\r\n                transition: theme.transitions.create('width', {\r\n                    easing: theme.transitions.easing.sharp,\r\n                    duration: theme.transitions.duration.leavingScreen,\r\n                }),\r\n                width: theme.spacing(7),\r\n                [theme.breakpoints.up('sm')]: {\r\n                    width: theme.spacing(9),\r\n                },\r\n            }),\r\n        },\r\n    }),\r\n);\r\n\r\n// TODO remove, this demo shouldn't need to reset the theme.\r\nconst defaultTheme = createTheme(\r\n    {\r\n        palette: {\r\n            mode: 'dark',\r\n            primary: {\r\n                main: '#faa935',\r\n            },\r\n            secondary: {\r\n                main: '#4fa34f',\r\n            },\r\n            background: {\r\n                default: '#170707',\r\n            }\r\n        },\r\n    }\r\n);\r\n\r\nexport default function Dashboard() {\r\n    const [open, setOpen] = React.useState(true);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const openMenu = Boolean(anchorEl);\r\n\r\n    const toggleDrawer = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    return (\r\n        <Routes>\r\n            <Route>\r\n                {adminRoutes.map((route, index) => {\r\n                    const Component = route.component;\r\n                    const Title = route.placeholder;\r\n                    return (\r\n                        <Route\r\n                            key={index}\r\n                            path={route.path}\r\n                            element={\r\n                                <ThemeProvider theme={defaultTheme}>\r\n                                    <Box sx={{display: 'flex'}}>\r\n                                        <CssBaseline/>\r\n                                        <AppBar position=\"absolute\" open={open}>\r\n                                            <Toolbar\r\n                                                sx={{\r\n                                                    pr: '24px', // keep right padding when drawer closed\r\n                                                }}\r\n                                            >\r\n\r\n                                                <IconButton\r\n                                                    edge=\"start\"\r\n                                                    color=\"inherit\"\r\n                                                    aria-label=\"open drawer\"\r\n                                                    onClick={toggleDrawer}\r\n                                                    sx={{\r\n                                                        marginRight: '36px',\r\n                                                        ...(open && {display: 'none'}),\r\n                                                    }}\r\n                                                >\r\n                                                    <MenuIcon/>\r\n                                                </IconButton>\r\n                                                {Title}\r\n                                                <Typography\r\n                                                    component=\"h1\"\r\n                                                    variant=\"h6\"\r\n                                                    color=\"inherit\"\r\n                                                    noWrap\r\n                                                    sx={{flexGrow: 1}}\r\n                                                >\r\n\r\n                                                </Typography>\r\n\r\n                                                <Avatar sx={{bgcolor: '#1454da', ml: 2}}>AD</Avatar>\r\n                                            </Toolbar>\r\n                                        </AppBar>\r\n                                        <Drawer variant=\"permanent\" open={open}>\r\n                                            <Toolbar\r\n                                                sx={{\r\n                                                    display: 'flex',\r\n                                                    alignItems: 'center',\r\n                                                    justifyContent: 'flex-end',\r\n                                                    px: [1],\r\n                                                }}\r\n                                            >\r\n                                                <IconButton onClick={toggleDrawer}>\r\n                                                    <ChevronLeftIcon/>\r\n                                                </IconButton>\r\n                                            </Toolbar>\r\n                                            <Divider/>\r\n                                            <List component=\"nav\">\r\n                                                {mainListItems}\r\n                                                <Divider sx={{my: 1}}/>\r\n                                                {secondaryListItems}\r\n                                            </List>\r\n                                        </Drawer>\r\n                                        <Box\r\n                                            component=\"main\"\r\n                                            sx={{\r\n                                                backgroundColor: (theme) =>\r\n                                                    theme.palette.mode === 'light'\r\n                                                        ? theme.palette.grey[100]\r\n                                                        : theme.palette.grey[900],\r\n                                                flexGrow: 1,\r\n                                                height: '100vh',\r\n                                                overflow: 'auto',\r\n                                            }}\r\n                                        >\r\n                                            <Toolbar/>\r\n                                            <Container maxWidth=\"lg\" sx={{mt: 4, mb: 4}}>\r\n                                                {/*Main container include function here*/}\r\n\r\n                                                <MyProfile />\r\n                                                <Copyright sx={{pt: 4}}/>\r\n                                            </Container>\r\n                                        </Box>\r\n                                    </Box>\r\n                                </ThemeProvider>\r\n                            }\r\n                        />\r\n                    )\r\n                })}\r\n            </Route>\r\n        </Routes>\r\n\r\n    );\r\n}","//new login form\r\nimport * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\r\nimport {useState, useEffect, useCallback} from 'react';\r\nimport {Navigate, useNavigate} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport {LoginSuccess} from '../../redux/actions/authAction'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {LoginWithUsernameAndPassword} from '../../services/auth.service';\r\n\r\nfunction Copyright(props) {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://mui.com/\">\r\n                Chat On Gpt\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\n// TODO remove, this demo shouldn't need to reset the theme.\r\n\r\nconst defaultTheme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#00A67E',\r\n        },\r\n        secondary: {\r\n            main: '#00A67E',\r\n        },\r\n    },\r\n});\r\n\r\nexport default function Login(props) {\r\n    const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const information = {\r\n            username: data.get('email'),\r\n            password: data.get('password'),\r\n        }\r\n        try {\r\n            const loginData = await LoginWithUsernameAndPassword(information?.username, information?.password);\r\n            dispatch(LoginSuccess(loginData.userData));\r\n            navigate('/')\r\n        } catch (error) {\r\n            // Handle error if needed\r\n        }finally {\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={defaultTheme}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline/>\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 7,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{m: 1, bgcolor: 'secondary.main'}}>\r\n                        <LockOutlinedIcon/>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n                    </Typography>\r\n                    <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{mt: 1}}>\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                        />\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Checkbox value=\"remember\" color=\"primary\"/>}\r\n                            label=\"Remember me\"\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{mt: 3, mb: 2}}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item xs>\r\n                                <Link href=\"#\" variant=\"body2\">\r\n                                    Forgot password?\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Link href=\"/SignUp\" variant=\"body2\">\r\n                                    {\"Don't have an account? Sign Up\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Box>\r\n                <Copyright sx={{mt: 8, mb: 4}}/>\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nimport styles from \"./Contact.module.css\";\r\nimport { getImageUrl } from \"../../utils\";\r\n\r\nexport const Contact = () => {\r\n  return (\r\n    <footer id=\"contact\" className={styles.container}>\r\n      <div className={styles.text}>\r\n        <h2>Contact</h2>\r\n        <p>Feel free to reach out!</p>\r\n      </div>\r\n      <ul className={styles.links}>\r\n        <li className={styles.link}>\r\n          <img src={getImageUrl(\"contact/emailIcon.png\")} alt=\"Email icon\" />\r\n          <a href=\"mailto:myemail@email.com\">myemail@email.com</a>\r\n        </li>\r\n        <li className={styles.link}>\r\n          <img\r\n            src={getImageUrl(\"contact/linkedinIcon.png\")}\r\n            alt=\"LinkedIn icon\"\r\n          />\r\n          <a href=\"https://www.linkedin.com/myname\">linkedin.com/myname</a>\r\n        </li>\r\n        <li className={styles.link}>\r\n          <img src={getImageUrl(\"contact/githubIcon.png\")} alt=\"Github icon\" />\r\n          <a href=\"https://www.github.com/myname\">github.com/myname</a>\r\n        </li>\r\n      </ul>\r\n    </footer>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport styles from \"./Hero.module.css\";\r\nimport logo from \"../../assets/images/chatongptLogo.png\"\r\nimport { getImageUrl } from \"../../utils\";\r\n\r\nexport const Hero = () => {\r\n  return (\r\n    <section className={styles.container}>\r\n      <div className={styles.content}>\r\n        <h1 className={styles.title}>Hey chat gpt</h1>\r\n        <p className={styles.description}>\r\n            A MERN stack webapp to provide a platform to chat with each other with ChatGPT support\r\n        </p>\r\n        <a href=\"/login\" className={styles.contactBtn}>\r\n          Try it now\r\n        </a>\r\n      </div>\r\n      <img\r\n        src={logo}\r\n        alt=\"Hero image of me\"\r\n        className={styles.heroImg}\r\n      />\r\n      <div className={styles.topBlur} />\r\n      <div className={styles.bottomBlur} />\r\n    </section>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport styles from \"./Navbar.module.css\";\r\nimport { getImageUrl } from \"../../utils\";\r\n\r\nexport const Navbar = () => {\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  return (\r\n    <nav className={styles.navbar}>\r\n      <a className={styles.title} href=\"/\">\r\n        Chatongpt\r\n      </a>\r\n      <div className={styles.menu}>\r\n        <img\r\n          className={styles.menuBtn}\r\n          src={\r\n            menuOpen\r\n              ? getImageUrl(\"nav/closeIcon.png\")\r\n              : getImageUrl(\"nav/menuIcon.png\")\r\n          }\r\n          alt=\"menu-button\"\r\n          onClick={() => setMenuOpen(!menuOpen)}\r\n        />\r\n        <ul\r\n          className={`${styles.menuItems} ${menuOpen && styles.menuOpen}`}\r\n          onClick={() => setMenuOpen(false)}\r\n        >\r\n          <li>\r\n            <a href=\"#about\">About</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#experience\">Experience</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#projects\">Projects</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#about\">Contact</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import Chat from \"../pages/Chat\";\r\nimport UserSetting from \"../pages/Profile\";\r\nimport Login from \"../pages/Login\";\r\nimport SignUp from \"../components/SignUp\";\r\nimport Introduction from \"../pages/Introduction\";\r\nconst privateRoutes = [\r\n    {\r\n        path: '/',\r\n        component: Chat,\r\n    },\r\n    {\r\n        path: '/profile/*',\r\n        component: UserSetting,\r\n    }\r\n]\r\n\r\nconst publicRoutes = [\r\n    {\r\n        path: '/introduction',\r\n        component: Introduction,\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login,\r\n    },\r\n    {\r\n        path: '/signup',\r\n        component: SignUp,\r\n    }\r\n]\r\n\r\nexport {\r\n    privateRoutes,\r\n    publicRoutes\r\n};","import styles from \"./App.module.css\";\r\nimport { About } from \"../../components/About/About\";\r\nimport { Contact } from \"../../components/Contact/Contact\";\r\nimport { Experience } from \"../../components/Experience/Experience\";\r\nimport { Hero } from \"../../components/Hero/Hero\";\r\nimport { Navbar } from \"../../components/Navbar/Navbar\";\r\nimport { Projects } from \"../../components/Projects/Projects\";\r\nimport * as React from 'react';\r\nfunction Introduction() {\r\n    return (\r\n        <div className={styles.App}>\r\n            <Navbar />\r\n            <Hero />\r\n            {/*<About />*/}\r\n            {/*<Experience />*/}\r\n            {/*<Projects />*/}\r\n            <Contact />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Introduction;\r\n","'strict-mode'\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport ChatInterface from './components/ChatInterface';\r\nimport Login from './components/Login';\r\nimport SignUp from './components/SignUp';\r\nimport Chat from './pages/Chat';\r\nimport UserSetting from './components/UserSetting';\r\nimport {BrowserRouter, Routes, Route, Navigate, useNavigate, useLocation} from \"react-router-dom\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport isAuth from '../src/utils/isAuth';\r\nimport {publicRoutes, privateRoutes} from './routes/routes';\r\nimport {GetAccessToken, GetRefreshToken, RemoveRefreshToken, SetRefreshToken} from \"./utils/tokens\";\r\nimport {api} from './api/api';\r\nimport {LoginSuccess} from './redux/actions/authAction'\r\n\r\n\r\n\r\nfunction App() {\r\n    const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n    const [isLoading, setIsLoading] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    useEffect(() => {\r\n        const isAuth = async () => {\r\n            try{\r\n                setIsLoading(true);\r\n                const response = await api.patch('/auth/isAuth')\r\n                if (response.data) {\r\n                    dispatch(LoginSuccess(response.data))\r\n                }\r\n            }catch (e) {\r\n            }\r\n            finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n        isAuth();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(location.pathname)\r\n        if (isLoading === false && location.pathname === '/' && isAuthenticated !== true) {\r\n            // If user is authenticated, redirect to the home page\r\n            navigate('/introduction');\r\n        }\r\n        // if (!isLoading && location.pathname === '/' && isAuthenticated === true) {\r\n        //     // If user is authenticated, redirect to the home page\r\n        //     navigate('/');\r\n        // }\r\n        // if (!isLoading && location.pathname === '/login') {\r\n        //     // If user is authenticated, redirect to the home page\r\n        //     navigate('/login');\r\n        // }\r\n        // if (!isLoading && location.pathname === '/introduction') {\r\n        //     // If user is authenticated, redirect to the home page\r\n        //     navigate('/introduction');\r\n        // }\r\n        // if (!isLoading && location.pathname === '/profile/user-info') {\r\n        //     // If not authenticated and not loading, and not on the user-setting page, redirect to user-setting\r\n        //     navigate('/profile/user-info');\r\n        // }\r\n        },[isAuthenticated, isLoading]);\r\n\r\n    if (isLoading === true) {\r\n        // Render a loading indicator or any other content while checking authentication\r\n        return <div>\r\n            <p>Loading...</p>\r\n            <h1>Chờ xíu mạng lag quá...</h1>\r\n        </div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {/*<Chat />*/}\r\n            <Routes>\r\n                <Route>\r\n                    {privateRoutes.map((route, index) => {\r\n                        const Page = route.component;\r\n                        return (\r\n                            <Route\r\n                                key={index}\r\n                                path={route.path}\r\n                                element={\r\n                                    <Page/>\r\n                                }\r\n                            />\r\n                        )\r\n                    })}\r\n                    {publicRoutes.map((route, index) => {\r\n                        const Page = route.component;\r\n                        return (\r\n                            <Route\r\n                                key={index}\r\n                                path={route.path}\r\n                                element={<Page/>}\r\n                            />\r\n                        )\r\n                    })}\r\n                </Route>\r\n            </Routes>\r\n        </div>\r\n        // <div className=\"App\">\r\n        //     <Routes>\r\n        //         <Route path=\"/register\" element={<SignUp/>}/>\r\n        //         <Route path=\"/login\" element={<Login handleAuth={getAuthState}/>}/>\r\n        //         {isLoggedIn ? (\r\n        //             <>\r\n        //                 <Route path=\"/user/setting\" element={<Profile/>}/>\r\n        //                 <Route path=\"/\" element={<Chat socket={socket} onlineState={userOnline}/>}/>\r\n        //                 {/*<Route path=\"/login\" element={<Navigate to=\"/\" replace/>}/>*/}\r\n        //             </>\r\n        //         ) : <Route path=\"/*\" element={<Navigate to=\"/login\" replace/>}/>}\r\n        //     </Routes>\r\n        // </div>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {LOGIN, LOGOUT, REGISTER, LOGIN_SUCCESS} from \"../types\";\r\nimport {RemoveAccessToken, RemoveRefreshToken} from \"../../utils/tokens\";\r\n// src/reducers/authReducer.js\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: null,\r\n    error: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_SUCCESS:\r\n            const {_id, username, role, profilePicture, profilePictureUrl} = action.payload;\r\n            try {\r\n                return {\r\n                    ...state,\r\n                    isAuthenticated: true,\r\n                    user: {_id, username, role, profilePicture, profilePictureUrl},\r\n                    error: null,\r\n                };\r\n            } catch (error) {\r\n                // Handle error appropriately, you might want to set error in the state\r\n                console.error(\"Login failed:\", error);\r\n                return {\r\n                    ...state,\r\n                    isAuthenticated: false,\r\n                    user: null,\r\n                    error: \"Login failed\",\r\n                };\r\n            }\r\n        case LOGOUT:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                error: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default authReducer;\r\n  ","import {\r\n    LOAD_CHAT_ROOM,\r\n    SET_CURRENT_ROOM,\r\n    LOAD_ROOM_LIST,\r\n    SEND_MESSAGE,\r\n    RECEIVE_MESSAGE,\r\n    SET_ONLINE_USERS,\r\n    LOAD_INVITATION_LIST,\r\n    RECEIVE_INVITATION\r\n} from \"../types\";\r\n\r\n// src/reducers/authReducer.js\r\nconst initialState = {\r\n    roomList: [],\r\n    onlineUsers: [],\r\n    currentRoomId: null,\r\n    roomInfo: {},\r\n    messageList: [],\r\n    invitationList: [],\r\n    error: null\r\n};\r\n\r\nconst chatReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOAD_ROOM_LIST:\r\n            const {roomList} = action.payload;\r\n            try {\r\n                return {\r\n                    ...state,\r\n                    roomList: roomList,\r\n                    error: null,\r\n                };\r\n            } catch (error) {\r\n                return {\r\n                    ...state,\r\n                    error: error,\r\n                };\r\n            }\r\n        case SET_CURRENT_ROOM:\r\n            const {roomId} = action.payload;\r\n            return {\r\n                ...state,\r\n                currentRoomId: roomId,\r\n            };\r\n        case LOAD_CHAT_ROOM:\r\n            const {roomInfo, messageList} = action.payload;\r\n            try {\r\n                return {\r\n                    ...state,\r\n                    roomInfo,\r\n                    messageList,\r\n                    error: null,\r\n                };\r\n            } catch (error) {\r\n                return {\r\n                    ...state,\r\n                    error: error,\r\n                };\r\n            }\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messageList: [...state.messageList, action.payload],\r\n            };\r\n\r\n        case RECEIVE_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messageList: [...state.messageList, action.payload],\r\n            };\r\n        case SET_ONLINE_USERS:\r\n            return {\r\n                ...state,\r\n                onlineUsers: action.payload\r\n            };\r\n        case LOAD_INVITATION_LIST:\r\n            return {\r\n                ...state,\r\n                invitationList: action.payload.invitationList\r\n            };\r\n        case RECEIVE_INVITATION:\r\n            return {\r\n                ...state,\r\n                invitationList: [...state.invitationList, action.payload]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default chatReducer;\r\n","// src/store/index.js\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk'; // Import Redux Thunk\r\nimport authReducer from '../reducers/authReducer';\r\nimport chatReducer from '../reducers/chatReducer'\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  chat: chatReducer\r\n  // ...other reducers\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk)); // Apply Redux Thunk\r\n\r\nexport default store;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport {Provider} from 'react-redux';\r\nimport App from './App';\r\nimport store from './redux/store/index.js';\r\nimport {GoogleOAuthProvider} from '@react-oauth/google';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { SnackbarProvider, useSnackbar } from 'notistack';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n    // <React.StrictMode>\r\n    <GoogleOAuthProvider clientId=\"127584468731-i490h6p39anutta3f53g3o7s8t854tkm.apps.googleusercontent.com\">\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <SnackbarProvider>\r\n                    <App/>\r\n                </SnackbarProvider>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </GoogleOAuthProvider>,\r\n    // </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"list_container__TZ4VX\",\"chat_list\":\"list_chat_list__4pr7h\",\"chat_box\":\"list_chat_box__1dQCi\",\"chat_box_bar\":\"list_chat_box_bar__-tn6u\",\"add_member\":\"list_add_member__-m0ox\",\"add_member_box\":\"list_add_member_box__2yQW2\",\"user_adding_tags\":\"list_user_adding_tags__24-UH\",\"fly\":\"list_fly__29B4u\",\"chat_content\":\"list_chat_content__2kyRf\",\"expand\":\"list_expand__3ub04\",\"chat_content_messages\":\"list_chat_content_messages__3R-Y_\",\"border_message\":\"list_border_message__1E39c\",\"messages_wrapper\":\"list_messages_wrapper__1GZGF\",\"messages_content\":\"list_messages_content__39z0G\",\"message_image_wrapper\":\"list_message_image_wrapper__UW8EW\",\"message_image\":\"list_message_image__2vUrZ\",\"message_time\":\"list_message_time__udkTl\",\"chat_avatar\":\"list_chat_avatar__3u7b5\",\"chat_box_prompt\":\"list_chat_box_prompt__2hhqJ\",\"image_preview\":\"list_image_preview__2FxiQ\",\"images\":\"list_images__36_kS\",\"delete_image\":\"list_delete_image__2xgrn\",\"prompt_textArea\":\"list_prompt_textArea__QxO2b\",\"prompt_feature_area\":\"list_prompt_feature_area__3DKPn\",\"prompt_emoji\":\"list_prompt_emoji__aVDle\",\"emojiPicker\":\"list_emojiPicker__2f-HG\",\"prompt_sendButton\":\"list_prompt_sendButton__S19YW\",\"chat_list_navigation\":\"list_chat_list_navigation__1IeYV\",\"navigation_createNewChat\":\"list_navigation_createNewChat__S4nr7\",\"navigation_closeChat\":\"list_navigation_closeChat__3BBgK\",\"menu_chat\":\"list_menu_chat__1lcfj\",\"chat_list_conversationList\":\"list_chat_list_conversationList__2U4Tl\",\"conversationList_conversations\":\"list_conversationList_conversations__2uApz\",\"current_conversation\":\"list_current_conversation__z3x8H\",\"opponent\":\"list_opponent__2nIso\",\"hide\":\"list_hide__2ldXO\",\"user_found\":\"list_user_found__Ldsu1\",\"createConversationButton\":\"list_createConversationButton__3ESJ3\",\"createNewRoomForm\":\"list_createNewRoomForm__228ZO\",\"user_navigation\":\"list_user_navigation__3iTdQ\",\"user_info\":\"list_user_info__2L5gY\",\"user_notification\":\"list_user_notification__2XPBz\",\"user_invitations_tags\":\"list_user_invitations_tags__1CPUk\",\"navigation_openChatListButton\":\"list_navigation_openChatListButton__2OJMw\",\"open\":\"list_open__3FoAs\",\"isTypingStatus\":\"list_isTypingStatus__tb2lP\",\"createRoomStatus\":\"list_createRoomStatus__2bGVA\",\"bar_padding\":\"list_bar_padding__1YWIP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"About_container__t4VpZ\",\"title\":\"About_title__G0w21\",\"content\":\"About_content__cUiXj\",\"aboutImage\":\"About_aboutImage__2LsTB\",\"aboutItems\":\"About_aboutItems__31_ej\",\"aboutItem\":\"About_aboutItem__2Uh-L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Experience_container__aycSi\",\"title\":\"Experience_title__JZPYR\",\"content\":\"Experience_content__HJsyK\",\"skills\":\"Experience_skills__IlB8E\",\"skill\":\"Experience_skill__1CnJr\",\"skillImageContainer\":\"Experience_skillImageContainer__3VK1y\",\"history\":\"Experience_history__3Ck28\",\"historyItem\":\"Experience_historyItem__AiZkl\",\"historyItemDetails\":\"Experience_historyItemDetails__3bsuU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProjectCard_container__2Shlj\",\"image\":\"ProjectCard_image__2yOCh\",\"title\":\"ProjectCard_title__2me57\",\"description\":\"ProjectCard_description__2qT04\",\"skills\":\"ProjectCard_skills__dstZi\",\"skill\":\"ProjectCard_skill__3XmyB\",\"links\":\"ProjectCard_links__NADJM\",\"link\":\"ProjectCard_link__woTPs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Hero_container__zjM-U\",\"content\":\"Hero_content__1eRSE\",\"title\":\"Hero_title__PSqYl\",\"description\":\"Hero_description__1VIch\",\"contactBtn\":\"Hero_contactBtn__2vQwD\",\"heroImg\":\"Hero_heroImg__2KCVt\",\"floating\":\"Hero_floating__1Jyx5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contact_container__242gB\",\"text\":\"Contact_text__3X8-W\",\"links\":\"Contact_links__2rPiG\",\"link\":\"Contact_link__13Zjf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1wuKM\",\"title\":\"Navbar_title__rnKr_\",\"menuBtn\":\"Navbar_menuBtn__lUnBj\",\"menu\":\"Navbar_menu__1VdM3\",\"menuItems\":\"Navbar_menuItems__-h6hw\",\"menuOpen\":\"Navbar_menuOpen__22zeV\"};"],"sourceRoot":""}